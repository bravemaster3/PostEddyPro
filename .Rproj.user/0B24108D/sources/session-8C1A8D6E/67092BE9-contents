library(devtools)
load_all()
library(dplyr)
library(lubridate)
library(zoo)
library(ggpubr)
library(grid)
library(ggcorrplot)
library(ggplot2)
library(scales)
library(GGally)
library(patchwork)
library(factoextra)
library(lemon)
#Halmyran
halm_aggr_ch4 <- readRDS("D:/EC/Data_organized/Halmyran/FINAL/aggr_rds.RDS")
halm_aggr_biomet <- readRDS("D:/EC/Data_organized/Halmyran/FINAL/aggr_biomet.RDS")
halm_aggr_co2 <- readRDS("D:/EC/Data_organized/Halmyran/FINAL/CO2/aggr_rds_CO2.RDS")
halm_aggr_h2o <- readRDS("D:/EC/Data_organized/Halmyran/FINAL/H2O/aggr_rds_H2O.RDS")

#Degero
deg_aggr_ch4 <- readRDS("D:/EC/Data_organized/Degero/FINAL/aggr_rds.RDS")
deg_aggr_biomet <- readRDS("D:/EC/Data_organized/Degero/FINAL/aggr_biomet.RDS")
deg_aggr_co2 <- readRDS("D:/EC/Data_organized/Degero/FINAL/CO2/aggr_rds_CO2.RDS")
deg_aggr_h2o <- readRDS("D:/EC/Data_organized/Degero/FINAL/H2O/aggr_rds_H2O.RDS")

#Stortjarn
sto_aggr_ch4 <- readRDS("D:/EC/Data_organized/Stortjarn/FINAL/aggr_rds.RDS")
sto_aggr_biomet <- readRDS("D:/EC/Data_organized/Stortjarn/FINAL/aggr_biomet.RDS")
sto_aggr_co2 <- readRDS("D:/EC/Data_organized/Stortjarn/FINAL/CO2/aggr_rds_CO2.RDS")
sto_aggr_h2o <- readRDS("D:/EC/Data_organized/Stortjarn/FINAL/H2O/aggr_rds_H2O.RDS")

#Halsingfors
hals_aggr_ch4 <- readRDS("D:/EC/Data_organized/Halsingfors/FINAL/aggr_rds.RDS")
hals_aggr_biomet <- readRDS("D:/EC/Data_organized/Halsingfors/FINAL/aggr_biomet.RDS")
hals_aggr_co2 <- readRDS("D:/EC/Data_organized/Halsingfors/FINAL/CO2/aggr_rds_CO2.RDS")
hals_aggr_h2o <- readRDS("D:/EC/Data_organized/Halsingfors/FINAL/H2O/aggr_rds_H2O.RDS")


#############Halfhourly
#Reading all and getting daily values
halm_30min <- Reduce(function(...) merge(..., by="datetime"), list(halm_aggr_ch4$flux_df_30min %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err, quality_ch4=quality),
                                                            halm_aggr_co2$flux_df_30min %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err, quality_nee=quality),
                                                            halm_aggr_h2o$flux_df_30min %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err, quality_h2o=quality),
                                                            halm_aggr_biomet$halfhour)) %>% mutate(Site="Halmyran", PARin_f=PARin_f/4.6,  #from umol/m2/s to W/m2
                                                                                              month = month(datetime), WTD_f = replace(WTD_f, month %in% c(12,1:3), NA)) %>%
  select(-c(NEE)) %>% rename(NEE=NEE_f,GPP=GPP_f) %>%
  mutate(GPP = ifelse(GPP < 0, 0, GPP),
                            FCH4 = FCH4/1000) #g instead of mg

deg_30min <- Reduce(function(...) merge(..., by="datetime"), list(deg_aggr_ch4$flux_df_30min %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err, quality_ch4=quality),
                                                              deg_aggr_co2$flux_df_30min %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err, quality_nee=quality),
                                                              deg_aggr_h2o$flux_df_30min %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err, quality_h2o=quality),
                                                              deg_aggr_biomet$halfhour)) %>% mutate(Site="Degero", PARin_f=PARin_f/4.6,  #from umol/m2/s to W/m2
                                                                                                     month = month(datetime), WTD_f = replace(WTD_f, month %in% c(12,1:3), NA)) %>%
  select(-c(NEE)) %>% rename(NEE=NEE_f,GPP=GPP_f) %>%
  mutate(GPP = ifelse(GPP < 0, 0, GPP),
         FCH4 = FCH4/1000) #g instead of mg

sto_30min <- Reduce(function(...) merge(..., by="datetime"), list(sto_aggr_ch4$flux_df_30min %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err, quality_ch4=quality),
                                                              sto_aggr_co2$flux_df_30min %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err, quality_nee=quality),
                                                              sto_aggr_h2o$flux_df_30min %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err, quality_h2o=quality),
                                                              sto_aggr_biomet$halfhour)) %>% mutate(Site="Stortjarn", PARin_f=PARin_f/4.6,  #from umol/m2/s to W/m2
                                                                                                     month = month(datetime), WTD_f = replace(WTD_f, month %in% c(12,1:3), NA)) %>%
  select(-c(NEE)) %>% rename(NEE=NEE_f,GPP=GPP_f) %>%
  mutate(GPP = ifelse(GPP < 0, 0, GPP),
         FCH4 = FCH4/1000) #g instead of mg

hals_30min <- Reduce(function(...) merge(..., by="datetime"), list(hals_aggr_ch4$flux_df_30min %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err, quality_ch4=quality),
                                                              hals_aggr_co2$flux_df_30min %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err, quality_nee=quality),
                                                              hals_aggr_h2o$flux_df_30min %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err, quality_h2o=quality),
                                                              hals_aggr_biomet$halfhour)) %>% mutate(Site="Halsingfors", PARin_f=PARin_f/4.6,  #from umol/m2/s to W/m2
                                                                                                     month = month(datetime), WTD_f = replace(WTD_f, month %in% c(12,1:3), NA)) %>%
  select(-c(NEE)) %>% rename(NEE=NEE_f,GPP=GPP_f) %>%
  mutate(Reco=ifelse(datetime<as.POSIXct("2020-06-12 00:00:00", tz="UTC"), NA, Reco)) %>%
  mutate(GPP = ifelse(GPP < 0, 0, GPP),
         FCH4 = FCH4/1000) #g instead of mg




#############hourly
#Reading all and getting daily values
# halm_hour <- Reduce(function(...) merge(..., by="hour"), list(halm_aggr_ch4$flux_df_hour %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err),
#                                                                    halm_aggr_co2$flux_df_hour %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err),
#                                                                    halm_aggr_h2o$flux_df_hour %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err),
#                                                                    halm_aggr_biomet$hour %>% rename(hour=datetime))) %>% mutate(Site="Halmyran", PARin_f=PARin_f/4.6,  #from umol/m2/s to W/m2
#                                                                                                           month = month(hour), WTD_f = replace(WTD_f, month %in% c(12,1:4), NA)) %>%
#   select(-c(NEE)) %>% rename(NEE=NEE_f,GPP=GPP_f) %>%
#   mutate(GPP = ifelse(GPP < 0, 0, GPP),
#          FCH4 = FCH4/1000) #g instead of mg
#
# deg_hour <- Reduce(function(...) merge(..., by="hour"), list(deg_aggr_ch4$flux_df_hour %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err),
#                                                                   deg_aggr_co2$flux_df_hour %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err),
#                                                                   deg_aggr_h2o$flux_df_hour %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err),
#                                                                   deg_aggr_biomet$hour %>% rename(hour=datetime))) %>% mutate(Site="Degero", PARin_f=PARin_f/4.6,  #from umol/m2/s to W/m2
#                                                                                                         month = month(hour), WTD_f = replace(WTD_f, month %in% c(12,1:4), NA)) %>%
#   mutate(GPP_sum = ifelse(GPP_sum < 0, 0, GPP_sum),
#          FCH4_sum = FCH4_sum/1000) #g instead of mg
#
# sto_hour <- Reduce(function(...) merge(..., by="hour"), list(sto_aggr_ch4$flux_df_hour %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err),
#                                                                   sto_aggr_co2$flux_df_hour %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err),
#                                                                   sto_aggr_h2o$flux_df_hour %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err),
#                                                                   sto_aggr_biomet$hour %>% rename(hour=datetime))) %>% mutate(Site="Stortjarn", PARin_f=PARin_f/4.6,  #from umol/m2/s to W/m2
#                                                                                                         month = month(hour), WTD_f = replace(WTD_f, month %in% c(12,1:4), NA)) %>%
#   select(-c(NEE)) %>% rename(NEE=NEE_f,GPP=GPP_f) %>%
#   mutate(GPP = ifelse(GPP < 0, 0, GPP),
#          FCH4 = FCH4/1000) #g instead of mg
#
# hals_hour <- Reduce(function(...) merge(..., by="hour"), list(hals_aggr_ch4$flux_df_hour %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err),
#                                                                    hals_aggr_co2$flux_df_hour %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err),
#                                                                    hals_aggr_h2o$flux_df_hour %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err),
#                                                                    hals_aggr_biomet$hour %>% rename(hour=datetime))) %>% mutate(Site="halsyran", PARin_f=PARin_f/4.6,  #from umol/m2/s to W/m2
#                                                                                                           month = month(hour), WTD_f = replace(WTD_f, month %in% c(12,1:4), NA)) %>%
#   select(-c(NEE)) %>% rename(NEE=NEE_f,GPP=GPP_f) %>%
#   mutate(GPP = ifelse(GPP < 0, 0, GPP),
#          FCH4 = FCH4/1000) #g instead of mg
#
#

#############DAILY
#Reading all and getting daily values
halm_day <- Reduce(function(...) merge(..., all=TRUE), list(halm_aggr_ch4$flux_df_day %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err),
                                                            halm_aggr_co2$flux_df_day %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err),
                                                            halm_aggr_h2o$flux_df_day %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err),
                                                            halm_aggr_biomet$day)) %>% mutate(Site="Halmyran", PARin_f=PARin_f/4.6,  #from umol/m2/s to W/m2
                                                                                              month = month(date), WTD_f = replace(WTD_f, month %in% c(12,1:3), NA)) %>%
  select(-SNOWd) %>%
  mutate(GPP_sum = ifelse(GPP_sum < 0, 0, GPP_sum),
                            FCH4_sum = FCH4_sum/1000) #g instead of mg

deg_day <- Reduce(function(...) merge(..., all=TRUE), list(deg_aggr_ch4$flux_df_day %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err),
                                                           deg_aggr_co2$flux_df_day %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err),
                                                           deg_aggr_h2o$flux_df_day %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err),
                                                           deg_aggr_biomet$day)) %>% mutate(Site="Degero", PARin_f=PARin_f/4.6,  #from umol/m2/s to W/m2
                                                                                            month = month(date), WTD_f = replace(WTD_f, month %in% c(12,1:3), NA)) %>%
  mutate(GPP_sum = ifelse(GPP_sum < 0, 0, GPP_sum),
         FCH4_sum = FCH4_sum/1000) #g instead of mg

sto_day <- Reduce(function(...) merge(..., all=TRUE), list(sto_aggr_ch4$flux_df_day %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err),
                                                           sto_aggr_co2$flux_df_day %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err),
                                                           sto_aggr_h2o$flux_df_day %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err),
                                                           sto_aggr_biomet$day)) %>% mutate(Site="Stortjarn", PARin_f=PARin_f/4.6,  #from umol/m2/s to W/m2
                                                                                            month = month(date), WTD_f = replace(WTD_f, month %in% c(12,1:3), NA)) %>%
  select(-SNOWd) %>% mutate(GPP_sum = ifelse(GPP_sum < 0, 0, GPP_sum),
                            FCH4_sum = FCH4_sum/1000) #g instead of mg


sto_day_intact_GPP <- Reduce(function(...) merge(..., all=TRUE), list(sto_aggr_ch4$flux_df_day %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err),
                                                           sto_aggr_co2$flux_df_day %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err),
                                                           sto_aggr_h2o$flux_df_day %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err),
                                                           sto_aggr_biomet$day)) %>% mutate(Site="Stortjarn", PARin_f=PARin_f/4.6,  #from umol/m2/s to W/m2
                                                                                            month = month(date), WTD_f = replace(WTD_f, month %in% c(12,1:3), NA)) %>%
  select(-SNOWd) %>% mutate(FCH4_sum = FCH4_sum/1000) #g instead of mg
  # select(-SNOWd) %>% mutate(GPP_sum = ifelse(is.na(GPP_sum), na.approx(GPP_sum), GPP_sum)) %>%
  # mutate(GPP_sum = ifelse(GPP_sum < 0, 0, GPP_sum),
  #        FCH4_sum = FCH4_sum/1000) #g instead of mg

hals_day <- Reduce(function(...) merge(..., all=TRUE), list(hals_aggr_ch4$flux_df_day %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err),
                                                            hals_aggr_co2$flux_df_day %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err),
                                                            hals_aggr_h2o$flux_df_day %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err),
                                                            hals_aggr_biomet$day)) %>% mutate(Site="Halsingfors", PARin_f=PARin_f/4.6,  #from umol/m2/s to W/m2
                                                                                              month = month(date), WTD_f = replace(WTD_f, month %in% c(12,1:3), NA)) %>%
  select(-SNOWd) %>%
  mutate(Reco_sum=ifelse(date<as.Date("2020-06-12"), NA, Reco_sum)) %>%
  mutate(GPP_sum = ifelse(GPP_sum < 0, 0, GPP_sum),
                            FCH4_sum = FCH4_sum/1000) #g instead of mg


#############MONTHLY
#Reading all and getting monthly values
halm_month <- Reduce(function(...) merge(..., all=TRUE), list(halm_aggr_ch4$flux_df_month %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err),
                                                              halm_aggr_co2$flux_df_month %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err),
                                                              halm_aggr_h2o$flux_df_month %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err),
                                                              halm_aggr_biomet$month)) %>% mutate(Site="Halmyran", PARin_f=PARin_f, WTD_f = replace(WTD_f, month %in% c(12,1:3), NA)) %>%
  select(-SNOWd) %>% arrange(yearmon) %>%
  mutate(period = rep((1:ceiling(nrow(.)/12)), each=12)[1:nrow(.)],
         GPP_sum = ifelse(GPP_sum < 0, 0, GPP_sum),
         FCH4_sum = FCH4_sum/1000, #g instead of mg
         PARin_f = PARin_f/4.6)#from umol/m2/s to W/m2

deg_month <- Reduce(function(...) merge(..., all=TRUE), list(deg_aggr_ch4$flux_df_month %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err),
                                                             deg_aggr_co2$flux_df_month %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err),
                                                             deg_aggr_h2o$flux_df_month %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err),
                                                             deg_aggr_biomet$month)) %>% mutate(Site="Degero", PARin_f=PARin_f, WTD_f = replace(WTD_f, month %in% c(12,1:3), NA)) %>%
  arrange(yearmon) %>%
  mutate(period = rep((1:ceiling(nrow(.)/12)), each=12)[1:nrow(.)],
         GPP_sum = ifelse(GPP_sum < 0, 0, GPP_sum),
         FCH4_sum = FCH4_sum/1000, #g instead of mg
         PARin_f = PARin_f/4.6)#from umol/m2/s to W/m2

sto_month <- Reduce(function(...) merge(..., all=TRUE), list(sto_aggr_ch4$flux_df_month %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err),
                                                             sto_aggr_co2$flux_df_month %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err),
                                                             sto_aggr_h2o$flux_df_month %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err),
                                                             sto_aggr_biomet$month)) %>% mutate(Site="Stortjarn", PARin_f=PARin_f, WTD_f = replace(WTD_f, month %in% c(12,1:3), NA)) %>%
  select(-SNOWd) %>% arrange(yearmon) %>%
  mutate(period = rep((1:ceiling(nrow(.)/12)), each=12)[1:nrow(.)],
         GPP_sum = ifelse(GPP_sum < 0, 0, GPP_sum),
         FCH4_sum = FCH4_sum/1000, #g instead of mg
         PARin_f = PARin_f/4.6)#from umol/m2/s to W/m2

hals_month <- Reduce(function(...) merge(..., all=TRUE), list(hals_aggr_ch4$flux_df_month %>% rename(meas_err_ch4 = meas_err, tot_err_ch4 = tot_err),
                                                              hals_aggr_co2$flux_df_month %>% rename(meas_err_NEE = meas_err, tot_err_NEE = tot_err),
                                                              hals_aggr_h2o$flux_df_month %>% rename(meas_err_h2o = meas_err, tot_err_h2o = tot_err),
                                                              hals_aggr_biomet$month)) %>% mutate(Site="Halsingfors", PARin_f=PARin_f, WTD_f = replace(WTD_f, month %in% c(12,1:3), NA)) %>%
  select(-SNOWd) %>% arrange(yearmon) %>%
  mutate(Reco_sum=ifelse(yearmon <= as.yearmon("2020-06"), NA, Reco_sum)) %>%
  mutate(period = rep((1:ceiling(nrow(.)/12)), each=12)[1:nrow(.)],
         GPP_sum = ifelse(GPP_sum < 0, 0, GPP_sum),
         FCH4_sum = FCH4_sum/1000, #g instead of mg
         PARin_f = PARin_f/4.6)#from umol/m2/s to W/m2

##############################PLOTSSSSSSSSSSSS

#############################

#######################Raw & gapfilled


raw_df_gf <- Reduce(f = function(x,y) merge(x,y,all=T),list(deg_30min %>%
                                                            select(datetime,FCH4,quality_ch4, Site),
                                                          halm_30min %>%
                                                            select(datetime, FCH4,quality_ch4, Site),
                                                          sto_30min %>%
                                                            select(datetime, FCH4,quality_ch4, Site),
                                                          hals_30min %>%
                                                            select(datetime, FCH4,quality_ch4, Site))) %>%
  rename(quality = quality_ch4)

raw_df_gf$date <- as.Date(raw_df_gf$datetime)
raw_df_gf$month <- as.numeric(format(raw_df_gf$date, format="%m"))

# start_datetime <- max(min(raw_df_gf$datetime[raw_df_gf$Site=="Hålmyran"]),min(raw_df_gf$datetime[raw_df_gf$Site=="Degerö"]),
#                       min(raw_df_gf$datetime[raw_df_gf$Site=="Stortjarn"]),min(raw_df_gf$datetime[raw_df_gf$Site=="Hälsingfors"]))
# end_datetime <- min(max(raw_df_gf$datetime[raw_df_gf$Site=="Hålmyran"]),max(raw_df_gf$datetime[raw_df_gf$Site=="Degerö"]),
#                     max(raw_df_gf$datetime[raw_df_gf$Site=="Stortjarn"]),max(raw_df_gf$datetime[raw_df_gf$Site=="Hälsingfors"]))
#
# raw_df_gf <- raw_df_gf[raw_df_gf$datetime>=start_datetime & raw_df_gf$datetime<end_datetime,]
#
# raw_df_gf <- raw_df_gf %>%
#   mutate(quality = ifelse(!is.na(CH4_flux),"original","gapfilled"))
#
# raw_df_gf_pivotlonger <- raw_df_gf %>%
#   select(-c("quality")) %>%
#   rename_at(vars(c("CH4_flux","CH4_flux_gf")),~c("original","gapfilled")) %>%
#   pivot_longer(cols = c("original","gapfilled"),values_to="CH4_flux",names_to="quality")


raw_df_gf2 <- raw_df_gf

raw_df_gf2 <- raw_df_gf2 %>%
  mutate(counter=1) %>%
  #filter(Site=="Degero")%>%
  group_by(Site, quality) %>%
  summarise(count=sum(counter)) %>%
  mutate(perc =  round(prop.table(count) * 100, 0)) %>%
  group_by(Site) %>%
  summarise(facet_name = paste0(paste0(perc, collapse = "% gapfilled; "), "% original")) %>%
  mutate(facet_name = paste0(Site," : ", facet_name))

raw_df_gf3 <- raw_df_gf %>%
  merge(raw_df_gf2, by="Site")


#df %>% group_by(month) %>% mutate(per= prop.table(count) * 100)

p <- ggplot(data=raw_df_gf3,aes(x = datetime,y = 1000*FCH4,shape=quality,color=quality,size=quality,alpha=quality))+
  geom_point()+
  #geom_point(data=methane[is.na(methane$CH4_flux),],aes(x = datetime,y = CH4_flux_gf),size=0.01,shape=1,color="red")+
  # ylim(-10,100)+
  xlab("Time")+
  ylim(-0.2,6)+
  ylab("CH4 fluxes (mg. m-2. 30min-1)")+#ylab("CH4 fluxes (nmol.m-2.s-1)")+
  theme_classic()+
  scale_color_manual(values=c("red","black"))+
  scale_shape_manual(values=c(16,16))+
  scale_size_manual(values=c(0.01,0.5))+
  scale_alpha_manual(values = c(1,0.5))+
  scale_x_datetime(breaks = "1 month", labels=date_format("%Y-%m"))+
  theme(panel.border = element_rect(fill=NA,size=1),
        # panel.spacing.x=unit(0.1, "lines"),
        panel.spacing.y=unit(-2, "lines"),
        # panel.margin = unit(c(-0.5,0-0.5,0), "lines"),
        legend.position=c(0.06, 0.95),
        legend.background = element_rect(fill='transparent'),
        legend.spacing = unit(-0.2,"cm"),
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
        #strip.placement = "outside",
        axis.text.x.top = element_blank(),       # do not show top / right axis labels
        axis.text.y.right = element_blank(),     # for secondary axis
        axis.title.x.top = element_blank(),      # as above, don't show axis titles for
        axis.title.y.right = element_blank())+
  facet_rep_wrap(~ facet_name, nrow = 4)

p

# ggsave("D:/EC/Data_organized/Graphs_all/raw_gf_non_gf.png", plot=p, height=25,width=20, units = "cm")


ggsave("D:/EC/Data_organized/Graphs_all/raw_gf_non_gf.png", plot=p, height=20,width=18, units = "cm")
#
# g <- ggplotGrob(p)
# g$grobs$axis_b1$children[[2]][["grobs"]][[2]] <- nullGrob()
# g$grobs$axis_b2$children[[2]][["grobs"]][[2]] <- nullGrob()
# grid.newpage()
# grid.draw(g)

######################3D plots?

#halm
halm_day$doy <- yday(halm_day$date)
halm_day$year <- year(halm_day$date)

plotter_3D(df=halm_day %>% filter(year==2021), x_var="Ts_f", y_var="GPP_sum", z_var="FCH4_sum", col_var="doy")

#Degerö
deg_day$doy <- yday(deg_day$date)
deg_day$year <- year(deg_day$date)

#hals
hals_day$doy <- yday(hals_day$date)
hals_day$year <- year(hals_day$date)

#sto
sto_day$doy <- yday(sto_day$date)
sto_day$year <- year(sto_day$date)

plotter_3D(df=deg_day %>% filter(year==2021), x_var="WTD_f", y_var="GPP_sum", z_var="FCH4_sum", col_var="doy")

###########################
#############################"
#Plotting all daily
g_ch4 <- plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label=expression(atop("CH4 fluxes","(g. m-2. d-1)")),#"CH4 fluxes (g. m-2. d-1)",
                       y_col = "FCH4_sum", show_x_label = FALSE)
# g_gpp <- plotter_daily(list(halm_day%>% filter(date != as.Date("2022-07-06")),
#                             deg_day%>% filter(date != as.Date("2022-07-06")),
#                             sto_day%>% filter(date != as.Date("2022-07-06")),
#                             hals_day%>% filter(date != as.Date("2022-07-06"))), y_label="GPP (gC. m-2. d-1)", y_col = "GPP_sum", show_x_label = FALSE)
g_gpp_old <- plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label="GPP (gC. m-2. d-1)", y_col = "GPP_sum", show_x_label = FALSE)
g_gpp <- plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label="GPP (gC. m-2. d-1)", y_col = "GPP_sum", show_x_label = FALSE,ignore_NA=TRUE, GPP=TRUE)
g_Reco <- plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label="Reco (gC. m-2. d-1)", y_col = "Reco_sum", show_x_label = FALSE,ignore_NA=TRUE, Reco=TRUE)
g_nee <- plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label="NEE (gC. m-2. d-1)", y_col = "NEE_sum", show_x_label = FALSE,ignore_NA=TRUE, NEE =TRUE)


g_Ta <- plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label="Ta (°C)", y_col = "Ta_f", show_x_label = FALSE)
g_Ts <- plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label="Ts 15cm (°C)", y_col = "Ts_f", show_x_label = FALSE)
g_Ts2 <- plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label="Ts 2cm (°C)", y_col = "Ts1", show_x_label = FALSE)
g_Ts10 <- plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label="Ts 10cm (°C)", y_col = "Ts2", show_x_label = FALSE)
g_Ts15 <- plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label="Ts 15cm (°C)", y_col = "Ts3", show_x_label = FALSE)
g_Ts30 <- plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label="Ts 30cm (°C)", y_col = "Ts4", show_x_label = FALSE)
g_Ts50 <- plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label="Ts 50cm (°C)", y_col = "Ts5", show_x_label = FALSE)

g_PAR <-plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label="PARin(W.m-2)", y_col = "PARin_f", show_x_label = FALSE)
g_WTD <-plotter_daily(list(halm_day,deg_day,sto_day,hals_day), y_label="WTD (cm)", y_col = "WTD_f", show_x_label = TRUE)

ggarrange(g_ch4,g_gpp,g_Ta,g_Ts,g_PAR,g_WTD, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1.45))

ggsave("D:/EC/Data_organized/Graphs_all/all_variables.png", height=32,width=25, units = "cm")


ggsave("D:/EC/Data_organized/Graphs_all/all_variables_bigger.png", height=23,width=18.5, units = "cm")




ggarrange(g_Ta,g_Ts2,g_Ts10,g_Ts15,g_Ts30,g_Ts50,g_PAR,g_WTD, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1,1,1.50))
ggsave("D:/EC/Data_organized/Graphs_all/all_met.png", height=35,width=25, units = "cm")

ggarrange(g_ch4,g_nee,g_gpp,g_Reco,g_Ts,g_WTD, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1.40))
ggsave("D:/EC/Data_organized/Graphs_all/fluxes_only.png", height=32,width=25, units = "cm")

# list_df=list(halm_day,deg_day,sto_day_intact_GPP,hals_day)
# y_label="GPP (gC. m-2. d-1)"
# y_col = "GPP_sum"
# show_x_label = FALSE

################################
#######Correlation plots########
################################

#computing correlation matrix to check best Ts correlation with CH4 among other things...

corr_deg_month <- plotter_correlogram(df=deg_month, na_handle ="pairwise.complete.obs", Site = "Degerö",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"), show_x = FALSE, legend = TRUE)
corr_deg_day <- plotter_correlogram(df=deg_day, na_handle ="pairwise.complete.obs", Site = "Degerö",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"), show_x = FALSE, legend=TRUE)
corr_deg_halfhour <- plotter_correlogram(df=deg_30min, na_handle ="pairwise.complete.obs", Site = "Degerö",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_f", "Reco", "GPP", "NEE", "FCH4"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"), show_x = FALSE, legend = TRUE)


corr_sto_month <- plotter_correlogram(df=sto_month, na_handle ="pairwise.complete.obs", Site = "Stortjärn",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"), show_x = FALSE, show_y = FALSE)
corr_sto_day <- plotter_correlogram(df=sto_day, na_handle ="pairwise.complete.obs", Site = "Stortjärn",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"), show_x = FALSE, show_y = FALSE)
corr_sto_halfhour <- plotter_correlogram(df=sto_30min, na_handle ="pairwise.complete.obs", Site = "Stortjärn",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_f", "Reco", "GPP", "NEE", "FCH4"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"), show_x = FALSE, legend = TRUE)


corr_halm_month <- plotter_correlogram(df=halm_month, na_handle ="pairwise.complete.obs", Site = "Hålmyran",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"))
corr_halm_day <- plotter_correlogram(df=halm_day, na_handle ="pairwise.complete.obs", Site = "Hålmyran",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"))
corr_halm_halfhour <- plotter_correlogram(df=halm_30min, na_handle ="pairwise.complete.obs", Site = "Hålmyran",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_f", "Reco", "GPP", "NEE", "FCH4"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"), show_x = FALSE, legend = TRUE)


corr_hals_month <- plotter_correlogram(df=hals_month, na_handle ="pairwise.complete.obs", Site = "Hälsingfors",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"), show_y = FALSE)
corr_hals_day <- plotter_correlogram(df=hals_day, na_handle ="pairwise.complete.obs", Site = "Hälsingfors",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"), show_y = FALSE)
corr_hals_halfhour <- plotter_correlogram(df=hals_30min, na_handle ="pairwise.complete.obs", Site = "Hälsingfors",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_f", "Reco", "GPP", "NEE", "FCH4"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"), show_x = FALSE, legend = TRUE)


egg::ggarrange(corr_deg_month,corr_sto_month,corr_halm_month,corr_hals_month, ncol=2, nrow=2)
ggsave("D:/EC/Data_organized/Graphs_all/Correlation_plots_month.png", plot=egg::ggarrange(corr_deg_month,corr_sto_month,corr_halm_month,corr_hals_month, ncol=2, nrow=2), width=25, height = 25, units = "cm")

all_corr_day <- egg::ggarrange(corr_deg_day,corr_sto_day,corr_halm_day,corr_hals_day, ncol=2, nrow=2)
ggsave("D:/EC/Data_organized/Graphs_all/Correlation_plots_day.png", plot = all_corr_day, width=25, height = 25, units = "cm")

all_corr_halfhour <- egg::ggarrange(corr_deg_halfhour,corr_sto_halfhour,corr_halm_halfhour,corr_hals_halfhour, ncol=2, nrow=2)
ggsave("D:/EC/Data_organized/Graphs_all/Correlation_plots_halfhour.png", plot = all_corr_halfhour, width=25, height = 25, units = "cm")


#corrplot_use_everything
corr_deg_day <- plotter_correlogram(df=deg_day, na_handle ="everything", Site = "Hålmyran",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"))

corr_sto_day <- plotter_correlogram(df=sto_day, na_handle ="everything", Site = "Stortjärn",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"))

corr_halm_day <- plotter_correlogram(df=halm_day, na_handle ="everything", Site = "Hålmyran",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"))

corr_hals_day <- plotter_correlogram(df=hals_day, na_handle ="everything", Site = "Hälsingfors",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"))


#corrplot_use_only data from April 2020 to March 2021
corr_deg_day <- plotter_correlogram(df=deg_day %>%filter(date<as.Date("2021-04-01")), na_handle ="pairwise.complete.obs", Site = "Hålmyran",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"))

corr_sto_day <- plotter_correlogram(df=sto_day %>%filter(date<as.Date("2021-04-01")), na_handle ="pairwise.complete.obs", Site = "Stortjärn",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"))

corr_halm_day <- plotter_correlogram(df=halm_day %>%filter(date<as.Date("2021-04-01")), na_handle ="pairwise.complete.obs", Site = "Hålmyran",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"))

corr_hals_day <- plotter_correlogram(df=hals_day %>%filter(date<as.Date("2021-04-01")), na_handle ="pairwise.complete.obs", Site = "Hälsingfors",vec_var = c("PARin_f", "Ts5", "Ts4", "Ts3", "Ts2", "Ts1", "Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum"), vec_var_newnames = c("PARin", "Ts 50cm", "Ts 30cm", "Ts 15cm", "Ts 10cm", "Ts 2cm","Tair 2m", "WTD", "ET", "Reco", "GPP", "NEE", "FCH4"))

all_corr_day_2020 <- egg::ggarrange(corr_deg_day,corr_sto_day,corr_halm_day,corr_hals_day, ncol=2, nrow=2)


###TRYING ALSO GGPAIRS
df_all_month <- Reduce(function(...) rbind(...), list(halm_month,deg_month,sto_month,hals_month)) %>%
  select(c("PARin_f", "Ts_f","Ta_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "NEE_sum", "FCH4_sum","Site"))

ggpairs(df_all_month, columns=1:9, ggplot2::aes(colour=Site))+theme_classic()+
  theme(panel.border = element_rect(colour = "black", size = 1, fill=NA))


df_all_month <- Reduce(function(...) rbind(...), list(halm_month,deg_month,sto_month,hals_month)) %>%
  select(c("PARin_f", "Ts_f", "WTD_f","H2O_sum", "Reco_sum", "GPP_sum", "FCH4_sum","Site"))


df_all_month2 <- Reduce(function(...) rbind(...), list(halm_month,deg_month,sto_month,hals_month)) %>%
  select(c("Ts_f", "WTD_f","Reco_sum", "GPP_sum", "FCH4_sum","Site"))

#
# my_custom_cor <- function(data, mapping, color = I("grey50"), sizeRange = c(1, 5), ...) {
#
#   # get the x and y data to use the other code
#   x <- GGally::eval_data_col(data, mapping$x)
#   y <- GGally::eval_data_col(data, mapping$y)
#
#   ct <- cor.test(x,y)
#   sig <- symnum(
#     ct$p.value, corr = FALSE, na = FALSE,
#     cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
#     symbols = c("***", "**", "*", ".", " ")
#   )
#
#   r <- unname(ct$estimate)
#   rt <- format(r, digits=2)[1]
#
#   # since we can't print it to get the strsize, just use the max size range
#   cex <- max(sizeRange)
#
#   # helper function to calculate a useable size
#   percent_of_range <- function(percent, range) {
#     percent * diff(range) + min(range, na.rm = TRUE)
#   }
#
#   # plot the cor value
#   ggally_text(
#     label = as.character(rt),
#     mapping = aes(),
#     xP = 0.5, yP = 0.5,
#     size = I(percent_of_range(cex * abs(r), sizeRange)),
#     color = color,
#     ...
#   ) +
#     # add the sig stars
#     geom_text(
#       aes_string(
#         x = 0.8,
#         y = 0.8
#       ),
#       label = sig,
#       size = I(cex),
#       color = color,
#       ...
#     ) +
#     # remove all the background stuff and wrap it with a dashed line
#     theme_classic() +
#     theme(
#       panel.background = element_rect(
#         color = color,
#         linetype = "longdash"
#       ),
#       axis.line = element_blank(),
#       axis.ticks = element_blank(),
#       axis.text.y = element_blank(),
#       axis.text.x = element_blank()
#     )
# }
# my_custom_cor(iris, aes(Sepal.Length, Sepal.Width))

gg_color_hue <- function(n) {
  hues = seq(15, 375, length = n + 1)
  hcl(h = hues, l = 65, c = 100)[1:n]
}


my_custom_cor_s <- function(data, mapping, Site="Site", color = I("grey50"), sizeRange = c(1, 3), ...) {

  # get the x and y data to use the other code
  x <- GGally::eval_data_col(data, mapping$x)
  y <- GGally::eval_data_col(data, mapping$y)
  #print(mapping)
  x1 <- GGally::eval_data_col(data[data[,Site]=="Degero",], mapping$x)
  y1 <- GGally::eval_data_col(data[data[,Site]=="Degero",], mapping$y)

  x2 <- GGally::eval_data_col(data[data[,Site]=="Halmyran",], mapping$x)
  y2 <- GGally::eval_data_col(data[data[,Site]=="Halmyran",], mapping$y)

  x3 <- GGally::eval_data_col(data[data[,Site]=="Halsingfors",], mapping$x)
  y3 <- GGally::eval_data_col(data[data[,Site]=="Halsingfors",], mapping$y)

  x4 <- GGally::eval_data_col(data[data[,Site]=="Stortjarn",], mapping$x)
  y4 <- GGally::eval_data_col(data[data[,Site]=="Stortjarn",], mapping$y)

  ct <- cor.test(x,y)
  ct1 <- cor.test(x1,y1)
  ct2 <- cor.test(x2,y2)
  ct3 <- cor.test(x3,y3)
  ct4 <- cor.test(x4,y4)
  sig <- symnum(
    ct$p.value, corr = FALSE, na = FALSE,
    cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
    symbols = c("***", "**", "*", ".", " ")
  )

  sig1 <- symnum(
    ct1$p.value, corr = FALSE, na = FALSE,
    cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
    symbols = c("***", "**", "*", ".", " ")
  )
  sig2 <- symnum(
    ct2$p.value, corr = FALSE, na = FALSE,
    cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
    symbols = c("***", "**", "*", ".", " ")
  )

  sig3 <- symnum(
    ct3$p.value, corr = FALSE, na = FALSE,
    cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
    symbols = c("***", "**", "*", ".", " ")
  )

  sig4 <- symnum(
    ct4$p.value, corr = FALSE, na = FALSE,
    cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
    symbols = c("***", "**", "*", ".", " ")
  )

  r <- unname(ct$estimate)
  rt <- format(r, digits=2)[1]

  r1 <- unname(ct1$estimate)
  rt1 <- format(r1, digits=2)[1]

  r2 <- unname(ct2$estimate)
  rt2 <- format(r2, digits=2)[1]

  r3 <- unname(ct3$estimate)
  rt3 <- format(r3, digits=2)[1]

  r4 <- unname(ct4$estimate)
  rt4 <- format(r4, digits=2)[1]

  # since we can't print it to get the strsize, just use the max size range
  cex <- max(sizeRange)

  # helper function to calculate a useable size
  percent_of_range <- function(percent, range) {
    percent * diff(range) + min(range, na.rm = TRUE)
  }

  # plot the cor value

  ggally_text(
    # label = paste(as.character(rt), two_fit, sep=" , "),
    # label = as.character(rt),
    label =as.character(rt1),
    mapping = aes(),
    xP = 0.5, yP = 0.85,
    size = I(percent_of_range(cex * abs(r1), sizeRange)),
    color = gg_color_hue(4)[1],
    ...
  ) +
    # add the sig stars
    # geom_text(
    #   aes_string(
    #     x = 0.85,
    #     y = 0.85
    #   ),
    #   label = sig,
    #   size = I(cex*2.7),
    #   color = "black",
    #   ...
    # ) +
  geom_text(
    aes_string(
      x = 0.85,
      y = 0.85
    ),
    label = sig1,
    size = I(percent_of_range(cex * abs(r1), sizeRange)),
    color = gg_color_hue(4)[1],
    ...
  ) +
    # geom_text(
    #   aes_string(
    #     x = 0.5,
    #     y = 0.46
    #
    #   ),
    #   label = as.character(rt1),
    #   # label = paste("rg",as.character(rt1),sep="="),
    #   size = I(percent_of_range(cex * abs(r1), sizeRange)),
    #   color = gg_color_hue(4)[1],
    #   ...
    # ) +
    geom_text(
      aes_string(
        x = 0.5,
        y = 0.65
      ),
      #label=bquote(~r[d]'='~rt2),
      label =as.character(rt2),
      # label = paste("rd",as.character(rt2),sep="="),
      size = I(percent_of_range(cex * abs(r2), sizeRange)),
      color = gg_color_hue(4)[2],
      ...
    ) +
    geom_text(
      aes_string(
        x = 0.85,
        y = 0.65
      ),
      label = sig2,
      size = I(percent_of_range(cex * abs(r2), sizeRange)),
      color = gg_color_hue(4)[2],
      ...
    ) +
    geom_text(
      aes_string(
        x = 0.5,
        y = 0.45
      ),
      #label=bquote(~r[d]'='~rt2),
      label =as.character(rt3),
      # label = paste("rd",as.character(rt2),sep="="),
      size = I(percent_of_range(cex * abs(r3), sizeRange)),
      color = gg_color_hue(4)[3],
      ...
    ) +
    geom_text(
      aes_string(
        x = 0.85,
        y = 0.45
      ),
      label = sig3,
      size = I(percent_of_range(cex * abs(r3), sizeRange)),
      color = gg_color_hue(4)[3],
      ...
    ) +
    geom_text(
      aes_string(
        x = 0.5,
        y = 0.20
      ),
      #label=bquote(~r[d]'='~rt2),
      label =as.character(rt4),
      # label = paste("rd",as.character(rt2),sep="="),
      size = I(percent_of_range(cex * abs(r4), sizeRange)),
      color = gg_color_hue(4)[4],
      ...
    ) +

    geom_text(
      aes_string(
        x = 0.85,
        y = 0.20
      ),
      label = sig2,
      size = I(percent_of_range(cex * abs(r4), sizeRange)),
      color = gg_color_hue(4)[4],
      ...
    ) +
    # remove all the background stuff and wrap it with a dashed line
    theme_classic() +
    theme(axis.text.x=element_text(colour = "black"),axis.text.y=element_text(colour = "black"),
          panel.background = element_rect(
            color = "black",
            linetype = "solid"
          ),
          axis.line = element_blank(),
          axis.ticks = element_blank()
          # axis.text.y = element_blank(),
          # axis.text.x = element_blank()
    )
}



my_custom_smooth <- function(data, mapping, Site="Site", ...) {
  p <- ggplot(data = data, mapping = mapping) +
    geom_point() #+
    #geom_smooth(method = "lm", color = I("black"), ...)

  # print(substitute(lm(x ~ y, data=data), mapping))
  # mod <- eval(substitute(lm(x ~ y, data=data), mapping))
  # x <- as.character(eval(mapping$x, data))[2]
  # y <- as.character(eval(mapping$y, data))[2]

  x <- as.character(eval(mapping$x, data))[2]
  x <- as.character(gsub("`", "",x))
  #print(x)
  y <- as.character(eval(mapping$y, data))[2]
  y <- as.character(gsub("`", "",y))

  # x <- GGally::eval_data_col(data, mapping$x)
  # y <- GGally::eval_data_col(data, mapping$y)


  #print(data[,x])
  vec_sites <- c()
  for (i in unique(data[,Site])){
    corr_site <- cor(data[data[,Site]==i,x], data[data[,Site]==i,y], use="complete.obs")
    if(corr_site >=0.80) vec_sites <- c(vec_sites, i)
  }

  #corr <- cor(data[,x], data[,y], use="complete.obs")
  # x <- GGally::eval_data_col(data, mapping$x)
  # y <- GGally::eval_data_col(data, mapping$y)
  # corr <- cor(x ~ y, use="complete.obs")

  # print(mod)
  # corr <- runif(1)

  if(length(vec_sites > 0))  p <- p + geom_smooth(data=data[data[,Site] %in% vec_sites,], method = "lm", se=FALSE, ...)



  # if (corr >= 0.8 | corr <= -0.8) {
  #   p <- p + geom_smooth(data=data[data[,Site]=="Degero",], method = "lm", se=FALSE, ...)
  #   #   theme(
  #   #   panel.border = element_rect(
  #   #     color = "red",
  #   #     size = 3,
  #   #     linetype = "solid",
  #   #     fill = "transparent"
  #   #   )
  #   # )
  # }



  p
}

diag_fun <- function(data, mapping, ...){
  ggplot(data = data, mapping=mapping) +
    geom_density(fill=NA)
}

 names(df_all_month) <- c("PARin(W.m-2)", "Ts 15cm(°C)", "WTD(cm)", "ET(mm.month-1)","Reco(gC.m-2.month-1)","GPP(gC.m-2.month-1)", "FCH4(g.m-2.month-1)", "Site")
 names(df_all_month2) <- c("Ts 15cm(°C)", "WTD(cm)", "Reco(gC.m-2.month-1)","GPP(gC.m-2.month-1)", "FCH4(g.m-2.month-1)", "Site")
# names(df_all_month) <- c("PARin_W/m2", "Ts15cm_degC", "WTD_cm", "ET_mm/month","Reco_gC/m2/month","GPP_gC/m2/month", "FCH4_g/m2/month", "Site")
# names(df_all_month) <- c("PARin_W_m2", "Ts15cm_degC", "WTD_cm", "ET_mm_month","Reco_gC_m2_month","GPP_gC_m2_month", "FCH4_g_m2_month", "Site")
g <- ggpairs(df_all_month, columns=1:7, ggplot2::aes(colour=Site), diag=list(continuous=diag_fun), legend = 1,
             lower = list(continuous = my_custom_smooth),
             upper = list(continuous = my_custom_cor_s))+theme_classic()+
  theme(panel.border = element_rect(colour = "black", size = 1, fill=NA))

g


ggsave("D:/EC/Data_organized/Graphs_all/ggpairs.png", plot = g, width=35, height = 31, units = "cm")


g2 <- ggpairs(df_all_month2, columns=1:5, ggplot2::aes(colour=Site), diag=list(continuous=diag_fun), legend = 1,
             lower = list(continuous = my_custom_smooth),
             upper = list(continuous = my_custom_cor_s))+theme_classic()+
  theme(panel.border = element_rect(colour = "black", size = 1, fill=NA))

g2

ggsave("D:/EC/Data_organized/Graphs_all/ggpairs_simpl.png", plot = g2, width=35, height = 31, units = "cm")


g3 <- ggpairs(df_all_month2, columns=3:5, ggplot2::aes(colour=Site), diag=list(continuous=diag_fun), legend = 1,
              lower = list(continuous = my_custom_smooth),
              upper = list(continuous = my_custom_cor_s))+theme_classic()+
  theme(panel.border = element_rect(colour = "black", size = 1, fill=NA))

g3

ggsave("D:/EC/Data_organized/Graphs_all/ggpairs_simpl2.png", plot = g3, width=25, height = 20, units = "cm")


# g <- ggpairs(df_all_month, columns=1:7, ggplot2::aes(colour=Site), diag=list(continuous="bar"), legend = 1,
#              lower = list(continuous = my_custom_smooth),
#              upper = list(continuous = GGally::wrap("cor", size=3.5)))+theme_classic()+
#   theme(panel.border = element_rect(colour = "black", size = 1, fill=NA))

# g
# g <- ggpairs(df_all_month, columns=1:7, ggplot2::aes(colour=Site), diag=list(continuous="bar"), legend = 1,
#         lower = list(continuous = GGally::wrap("smooth", alpha = 0.2, size=2,  se=FALSE)),
#         upper = list(continuous = GGally::wrap("cor", size=3.5)))+theme_classic()+
#   theme(panel.border = element_rect(colour = "black", size = 1, fill=NA))


# ggally_cor(df_all_month, columns=1:7, ggplot2::aes(x=2, y=2, colour=Site))
################################
#######Monthly anomalies########
################################
g_ch4_gpp <- plotter_monthly_anomalies(list(halm_month,deg_month,sto_month,hals_month), x_col="GPP_sum", y_col = "FCH4_sum")
g_ch4_gpp

g_ch4_reco <- plotter_monthly_anomalies(list(halm_month,deg_month,sto_month,hals_month), x_col="Reco_sum", y_col = "FCH4_sum", x_label = "Monthly Reco anomaly (gC.m-2.month-1)")
g_ch4_reco

g_ch4_nee <- plotter_monthly_anomalies(list(halm_month,deg_month,sto_month,hals_month), x_col="NEE_sum", y_col = "FCH4_sum", x_label = "Monthly NEE anomaly (gC.m-2.month-1)")
g_ch4_nee

g_ch4_PARin <- plotter_monthly_anomalies(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly PARin anomaly (W.m-2)", x_col="PARin_f", y_col = "FCH4_sum", add_geom_smooth = FALSE)
g_ch4_PARin

g_ch4_wtd<- plotter_monthly_anomalies(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly WTD  anomaly (cm)", x_col="WTD_f", y_col = "FCH4_sum")
g_ch4_wtd

g_ch4_ts<- plotter_monthly_anomalies(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 15cm  anomaly (°C)", x_col="Ts_f", y_col = "FCH4_sum")
g_ch4_ts

g_ch4_ta<- plotter_monthly_anomalies(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ta  anomaly (°C)", x_col="Ta_f", y_col = "FCH4_sum")
g_ch4_ta

g_ch4_ts1<- plotter_monthly_anomalies(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 2cm  anomaly (°C)", x_col="Ts1", y_col = "FCH4_sum")
g_ch4_ts1

g_ch4_ts2<- plotter_monthly_anomalies(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 10cm  anomaly (°C)", x_col="Ts2", y_col = "FCH4_sum")
g_ch4_ts2


g_ch4_ts3<- plotter_monthly_anomalies(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 15cm  anomaly (°C)", x_col="Ts3", y_col = "FCH4_sum")
g_ch4_ts3

g_ch4_ts4<- plotter_monthly_anomalies(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 30cm  anomaly (°C)", x_col="Ts4", y_col = "FCH4_sum")
g_ch4_ts4

g_ch4_ts5<- plotter_monthly_anomalies(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 50cm  anomaly (°C)", x_col="Ts5", y_col = "FCH4_sum")
g_ch4_ts5

#
# figure <- ggarrange(g_ch4_gpp,g_ch4_ts,g_ch4_wtd,g_ch4_PARin, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1.45))
#
# annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. d-1)", rot = 90, vjust = 1, gp = gpar(cex = 1)))
#
# ggsave("D:/EC/Data_organized/Graphs_all/anomalies_old.png",
#        plot = annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. month-1)", rot = 90, vjust = 1, gp = gpar(cex = 1))),
#        height=30,width=15, units = "cm", bg = "white")

figure <- ggarrange(g_ch4_gpp, g_ch4_reco,g_ch4_ts,g_ch4_wtd, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1.45))

annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. d-1)", rot = 90, vjust = 1, gp = gpar(cex = 1)))

ggsave("D:/EC/Data_organized/Graphs_all/anomalies.png",
       plot = annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. month-1)", rot = 90, vjust = 1, gp = gpar(cex = 1))),
       height=30,width=15, units = "cm", bg = "white")


################################
#######Monthly anomalies NEW!!!########
################################
g_ch4_gpp <- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_col="GPP_sum", y_col = "FCH4_sum")
g_ch4_gpp

g_ch4_reco <- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_col="Reco_sum", y_col = "FCH4_sum", x_label = "Monthly Reco anomaly (gC.m-2.month-1)")
g_ch4_reco

g_ch4_nee <- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_col="NEE_sum", y_col = "FCH4_sum", x_label = "Monthly NEE anomaly (gC.m-2.month-1)")
g_ch4_nee

g_ch4_PARin <- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly PARin anomaly (W.m-2)", x_col="PARin_f", y_col = "FCH4_sum")
g_ch4_PARin

g_ch4_wtd<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly WTD  anomaly (cm)", x_col="WTD_f", y_col = "FCH4_sum")
g_ch4_wtd

g_ch4_ts<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 15cm  anomaly (°C)", x_col="Ts_f", y_col = "FCH4_sum")
g_ch4_ts

g_ch4_ta<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ta  anomaly (°C)", x_col="Ta_f", y_col = "FCH4_sum")
g_ch4_ta

g_ch4_ts1<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 2cm  anomaly (°C)", x_col="Ts1", y_col = "FCH4_sum")
g_ch4_ts1

g_ch4_ts2<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 10cm  anomaly (°C)", x_col="Ts2", y_col = "FCH4_sum")
g_ch4_ts2


g_ch4_ts3<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 15cm  anomaly (°C)", x_col="Ts3", y_col = "FCH4_sum")
g_ch4_ts3

g_ch4_ts4<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 30cm  anomaly (°C)", x_col="Ts4", y_col = "FCH4_sum")
g_ch4_ts4

g_ch4_ts5<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 50cm  anomaly (°C)", x_col="Ts5", y_col = "FCH4_sum")
g_ch4_ts5

#
# figure <- ggarrange(g_ch4_gpp,g_ch4_ts,g_ch4_wtd,g_ch4_PARin, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1.45))
#
# annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. d-1)", rot = 90, vjust = 1, gp = gpar(cex = 1)))
#
# ggsave("D:/EC/Data_organized/Graphs_all/anomalies_old.png",
#        plot = annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. month-1)", rot = 90, vjust = 1, gp = gpar(cex = 1))),
#        height=30,width=15, units = "cm", bg = "white")

figure <- ggarrange(g_ch4_gpp, g_ch4_reco, g_ch4_PARin, g_ch4_ts1, g_ch4_ts, g_ch4_wtd, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1,1,1.45))

annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. d-1)", rot = 90, vjust = 1, gp = gpar(cex = 1)))


ggsave("D:/EC/Data_organized/Graphs_all/anomalies_new.png",
       plot = annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. month-1)", rot = 90, vjust = 1, gp = gpar(cex = 1))),
       height=30,width=20, units = "cm", bg = "white")



#SPLITTING IN 2 GROUPS

figure <- ggarrange(g_ch4_gpp, g_ch4_reco, g_ch4_PARin, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1))

annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. d-1)", rot = 90, vjust = 1, gp = gpar(cex = 1)))


ggsave("D:/EC/Data_organized/Graphs_all/anomalies_vegetation.png",
       plot = annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. month-1)", rot = 90, vjust = 1, gp = gpar(cex = 1))),
       height=20,width=20, units = "cm", bg = "white")



figure <- ggarrange(g_ch4_ts1, g_ch4_ts, g_ch4_wtd, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1))

annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. d-1)", rot = 90, vjust = 1, gp = gpar(cex = 1)))


ggsave("D:/EC/Data_organized/Graphs_all/anomalies_biomet_only.png",
       plot = annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. month-1)", rot = 90, vjust = 1, gp = gpar(cex = 1))),
       height=20,width=20, units = "cm", bg = "white")

################################
#######Monthly anomalies growing season only!!!########
################################
g_ch4_gpp <- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_col="GPP_sum", y_col = "FCH4_sum", growing_season = TRUE)
g_ch4_gpp

g_ch4_reco <- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_col="Reco_sum", y_col = "FCH4_sum", x_label = "Monthly Reco anomaly (gC.m-2.month-1)", growing_season = TRUE)
g_ch4_reco

g_ch4_nee <- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_col="NEE_sum", y_col = "FCH4_sum", x_label = "Monthly NEE anomaly (gC.m-2.month-1)", growing_season = TRUE)
g_ch4_nee

g_ch4_PARin <- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly PARin anomaly (W.m-2)", x_col="PARin_f", y_col = "FCH4_sum", growing_season = TRUE)
g_ch4_PARin

g_ch4_wtd<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly WTD  anomaly (cm)", x_col="WTD_f", y_col = "FCH4_sum", growing_season = TRUE)
g_ch4_wtd

g_ch4_ts<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 15cm  anomaly (°C)", x_col="Ts_f", y_col = "FCH4_sum", growing_season = TRUE)
g_ch4_ts

g_ch4_ta<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ta  anomaly (°C)", x_col="Ta_f", y_col = "FCH4_sum", growing_season = TRUE)
g_ch4_ta

g_ch4_ts1<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 2cm  anomaly (°C)", x_col="Ts1", y_col = "FCH4_sum", growing_season = TRUE)
g_ch4_ts1

g_ch4_ts2<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 10cm  anomaly (°C)", x_col="Ts2", y_col = "FCH4_sum", growing_season = TRUE)
g_ch4_ts2


g_ch4_ts3<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 15cm  anomaly (°C)", x_col="Ts3", y_col = "FCH4_sum", growing_season = TRUE)
g_ch4_ts3

g_ch4_ts4<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 30cm  anomaly (°C)", x_col="Ts4", y_col = "FCH4_sum", growing_season = TRUE)
g_ch4_ts4

g_ch4_ts5<- plotter_monthly_anomalies_2(list(halm_month,deg_month,sto_month,hals_month), x_label = "Monthly Ts 50cm  anomaly (°C)", x_col="Ts5", y_col = "FCH4_sum", growing_season = TRUE)
g_ch4_ts5

#
# figure <- ggarrange(g_ch4_gpp,g_ch4_ts,g_ch4_wtd,g_ch4_PARin, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1.45))
#
# annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. d-1)", rot = 90, vjust = 1, gp = gpar(cex = 1)))
#
# ggsave("D:/EC/Data_organized/Graphs_all/anomalies_old.png",
#        plot = annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. month-1)", rot = 90, vjust = 1, gp = gpar(cex = 1))),
#        height=30,width=15, units = "cm", bg = "white")

figure <- ggarrange(g_ch4_gpp, g_ch4_reco, g_ch4_PARin, g_ch4_ts1, g_ch4_ts, g_ch4_wtd, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1,1,1.45))

annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. d-1)", rot = 90, vjust = 1, gp = gpar(cex = 1)))


ggsave("D:/EC/Data_organized/Graphs_all/anomalies_new_growing_season.png",
       plot = annotate_figure(figure, left = textGrob("Monthly CH4 flux anomaly (g. m-2. month-1)", rot = 90, vjust = 1, gp = gpar(cex = 1))),
       height=30,width=20, units = "cm", bg = "white")

###############################
#T combined
halm_day <- halm_day %>%
  mutate(Ts_combined = ifelse(is.na(WTD_f), Ts1,
                              ifelse(WTD_f > -6, Ts1,
                                     ifelse(WTD_f > -12.5, Ts2,
                                            ifelse(WTD_f > -22.5, Ts3,
                                                   ifelse(WTD_f > -40, Ts4, Ts5))))))

sto_day <- sto_day %>%
  mutate(Ts_combined = ifelse(is.na(WTD_f), Ts1,
                              ifelse(WTD_f > -6, Ts1,
                                     ifelse(WTD_f > -12.5, Ts2,
                                            ifelse(WTD_f > -22.5, Ts3,
                                                   ifelse(WTD_f > -40, Ts4, Ts5))))))

deg_day <- deg_day %>%
  mutate(Ts_combined = ifelse(is.na(WTD_f), Ts1,
                              ifelse(WTD_f > -6, Ts1,
                                     ifelse(WTD_f > -12.5, Ts2,
                                            ifelse(WTD_f > -22.5, Ts3,
                                                   ifelse(WTD_f > -40, Ts4, Ts5))))))

hals_day <- hals_day %>%
  mutate(Ts_combined = ifelse(is.na(WTD_f), Ts1,
                              ifelse(WTD_f > -6, Ts1,
                                     ifelse(WTD_f > -12.5, Ts2,
                                            ifelse(WTD_f > -22.5, Ts3,
                                                   ifelse(WTD_f > -40, Ts4, Ts5))))))


plot(Ts_combined~date, data=halm_day, type="l")
plot(FCH4_sum~Ts_f, data=halm_day)
cor(halm_day$FCH4_sum, halm_day$Ts_f, use="complete.obs")
cor(halm_day$FCH4_sum, halm_day$Ts_combined, use="complete.obs")

plot(Ts_combined~date, data=sto_day, type="l")
plot(FCH4_sum~Ts_f, data=sto_day)
cor(sto_day$FCH4_sum, sto_day$Ts_f, use="complete.obs")
cor(sto_day$FCH4_sum, sto_day$Ts_combined, use="complete.obs")

plot(Ts_combined~date, data=deg_day, type="l")
plot(FCH4_sum~Ts_f, data=deg_day)
plot(FCH4_sum~Ts_combined, data=deg_day)
cor(deg_day$FCH4_sum, deg_day$Ts_f, use="complete.obs")
cor(deg_day$FCH4_sum, deg_day$Ts_combined, use="complete.obs")

cor(sto_day$FCH4_sum, sto_day$Ts_combined, use="complete.obs")

plot(Ts_combined~date, data=hals_day, type="l")
plot(FCH4_sum~Ts_f, data=hals_day)
plot(FCH4_sum~Ts_combined, data=hals_day)
cor(hals_day$FCH4_sum, hals_day$Ts_f, use="complete.obs")
cor(hals_day$FCH4_sum, hals_day$Ts_combined, use="complete.obs")


##################Investigating early burst
ggplot(halm_aggr_biomet$day, aes(date,SNOWd))+
  geom_point()+
  geom_smooth(span=0.1)+
  scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 week",
               date_labels = "%m")


ggplot(sto_aggr_biomet$day, aes(date,SNOWd))+
  geom_point()+
  geom_smooth(span=0.1)+
  scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 week",
               date_labels = "%m")

ggplot(halm_aggr_biomet$day, aes(date,SNOWd))+
  geom_point()+
  geom_smooth(span=0.1)+
  scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 week",
               date_labels = "%m")


#########################
deg_biomet <- data.table::fread("D:/EC/Data_organized/Degero/Biomet_merged/deg_met.csv")

ggplot(deg_biomet, aes(datetime,Pa))+
  geom_point()+
  geom_smooth(span=0.1)+
  scale_x_datetime(date_breaks = "1 month", date_minor_breaks = "1 week",
               date_labels = "%m")


# all_deg_rds <- readRDS("D:/EC/Data_organized/Halsingfors/FINAL/CO2/aggr_rds_CO2.RDS")
# # deg_aggr_co2$flux_df_30min$
# all_deg_rds$flux_df_30min$

test <- data.table::fread("D:/EC/Data_organized/Halsingfors/FINAL/CO2/For_ReddyProc_NEE_GF.txt")
test <- test[-1,]

plot(test$VPD_f)


###################################DOY########################################

label_at <- function(n) function(x) ifelse(x %% n == 0, x, "")

# breaks <- seq(0,366, by=10)
# labels <- as.character(seq(0,366, by=50))
#
# # labels <- as.character(breaks)
# labels[!(breaks %% 2.5 == 0)] <- ''
# tick.sizes <- rep(.5, length(breaks))
# tick.sizes[(breaks %% 2.5 == 0)] <- 1

halm_day <- halm_day %>%
  mutate(doy = yday(date),
         year = lubridate::year(date)) %>%
  filter(!row_number() == nrow(.))

halm_aggr_biomet$day <- halm_aggr_biomet$day %>%
  mutate(doy = yday(date),
         year = lubridate::year(date)) %>%
  filter(!row_number() == nrow(.))




deg_day <- deg_day %>%
  mutate(doy = yday(date),
         year = lubridate::year(date)) %>%
  filter(!row_number() == nrow(.))

deg_aggr_biomet$day <- deg_aggr_biomet$day %>%
  mutate(doy = yday(date),
         year = lubridate::year(date)) %>%
  filter(!row_number() == nrow(.))


sto_day <- sto_day %>%
  mutate(doy = yday(date),
         year = lubridate::year(date)) %>%
  filter(!row_number() == nrow(.))

sto_aggr_biomet$day <- sto_aggr_biomet$day %>%
  mutate(doy = yday(date),
         year = lubridate::year(date)) %>%
  filter(!row_number() == nrow(.))


hals_day <- hals_day %>%
  mutate(doy = yday(date),
         year = lubridate::year(date)) %>%
  filter(!row_number() == nrow(.))

hals_aggr_biomet$day <- hals_aggr_biomet$day %>%
  mutate(doy = yday(date),
         year = lubridate::year(date)) %>%
  filter(!row_number() == nrow(.))


###several graphs

#halm
g_halm_doy <- ggplot(halm_day, aes(doy,FCH4_sum, color=factor(year)))+
  geom_line(alpha=0.8, size=0.5)+
  ylim(-0.01, 0.25)+
  ylab("FCH4 (g.m-2.d-1")+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  annotate(geom="text", -Inf, Inf, label=" Hålmyran", hjust=0, vjust=1)+
  labs(colour="Year")

g_halm_doy_gpp <- ggplot(halm_day, aes(doy,GPP_sum, color=factor(year)))+
  geom_line(alpha=0.8, size=0.5)+
  ylim(0, 6)+
  ylab("GPP (gC.m-2.d-1")+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")

g_halm_doy_reco <- ggplot(halm_day, aes(doy,Reco_sum, color=factor(year)))+
  geom_line(alpha=0.8, size=0.5)+
  ylim(0, 6)+
  ylab("Reco (gC.m-2.d-1")+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")


g_halm_doy_nee_intact <- ggplot(halm_day, aes(doy,NEE_sum, color=factor(year)))+
  geom_point(alpha=0.1, size=0.5,)+
  geom_smooth(se=FALSE, span=0.1, alpha=0.8, size=0.5)+
  ylim(-2, 1)+
  ylab("NEE (gC.m-2.d-1")+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")

g_halm_doy_nee <- g_halm_doy_nee_intact +
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank())

g_halm_doy_ta <- ggplot(halm_day, aes(doy,Ta_f, color=factor(year)))+
  geom_line(alpha=0.8, size=0.5)+
  ylab("Ta (°C)")+
  ylim(-20, 28)+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")

g_halm_doy_ts_intact <- ggplot(halm_day, aes(doy,Ts_f, color=factor(year)))+
 geom_line(alpha=0.8, size=0.5)+
  ylab("Ts 15cm (°C)")+
  ylim(-0.5, 20)+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")

g_halm_doy_ts <- g_halm_doy_ts_intact +
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank())

g_halm_doy_par <- ggplot(halm_day, aes(doy,PARin_f, color=factor(year)))+
  geom_point(size=0.3,alpha=0.8)+
  geom_smooth(se=FALSE, span=0.1, alpha=0.8, size=0.3)+
  ylab("PARin (W.m-2)")+
  ylim(0, 150)+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")

g_halm_doy_wtd_intact <- ggplot(halm_day, aes(doy,WTD_f, color=factor(year)))+
  geom_line(alpha=0.8, size=0.5)+
  ylab("WTD (cm)")+
  ylim(-30, 20)+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10), labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")

g_halm_doy_wtd <- g_halm_doy_wtd_intact +
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank())

g_halm_doy_snow <- ggplot(halm_aggr_biomet$day, aes(doy,SNOWd,color=factor(year)))+
  geom_point(size=0.3, alpha=0.8)+
  ylab("SNOW height (m)")+
  ylim(0, 1)+
  theme_classic()+
  theme(axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  labs(colour="Year")



# ggplot(halm_aggr_biomet$day, aes(doy,-10*SNOWd,color=factor(year)))+
#   geom_point(size=0.)+
#   ylab("SNOW depth (cm)")+
#   theme_bw()+
#   scale_x_continuous(breaks=seq(0,366, by=50), minor_breaks=seq(0,366, by=10),  labels = label_at(50))+
#   theme(panel.border = element_rect(fill=NA))+
#   labs(colour="Year")




ggpubr::ggarrange(g_halm_doy, g_halm_doy_ts, g_halm_doy_wtd, g_halm_doy_snow, ncol=1, common.legend = TRUE, align = "v", heights = c(1,1,1,1.20))

###deg
g_deg_doy <- ggplot(deg_day, aes(doy,FCH4_sum, color=factor(year)))+
  geom_line(alpha=0.8, size=0.5)+
  ylim(-0.01, 0.25)+
  ylab("FCH4 (g.m-2.d-1")+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.title.y = element_blank(),
         axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  annotate(geom="text", -Inf, Inf, label=" Degerö", hjust=0, vjust=1)+
  labs(colour="Year")

g_deg_doy_gpp <- ggplot(deg_day, aes(doy,GPP_sum, color=factor(year)))+
  geom_line(alpha=0.8, size=0.5)+
  ylim(0, 6)+
  ylab("GPP (gC.m-2.d-1")+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")

g_deg_doy_reco <- ggplot(deg_day, aes(doy,Reco_sum, color=factor(year)))+
  geom_line(alpha=0.8, size=0.5)+
  ylim(0, 6)+
  ylab("Reco (gC.m-2.d-1")+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")


g_deg_doy_nee_intact <- ggplot(deg_day, aes(doy,NEE_sum, color=factor(year)))+
  geom_point(alpha=0.1, size=0.5,)+
  geom_smooth(se=FALSE, span=0.1, alpha=0.8, size=0.5)+
  ylim(-2, 1)+
  ylab("NEE (gC.m-2.d-1")+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")

g_deg_doy_nee <- g_deg_doy_nee_intact +
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank())

g_deg_doy_ta <- ggplot(deg_day, aes(doy,Ta_f, color=factor(year)))+
  geom_line(alpha=0.8, size=0.5)+
  ylab("Ta (°C)")+
  ylim(-20, 28)+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")

g_deg_doy_ts_intact <- ggplot(deg_day, aes(doy,Ts_f, color=factor(year)))+
  geom_line(alpha=0.8, size=0.5)+
  ylab("Ts 15cm (°C)")+
  ylim(-0.5, 20)+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.y = element_blank(),
         axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")

g_deg_doy_ts <- g_deg_doy_ts_intact +
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank())

g_deg_doy_par <- ggplot(deg_day, aes(doy,PARin_f, color=factor(year)))+
  geom_point(size=0.3,alpha=0.8)+
  geom_smooth(se=FALSE, span=0.1, alpha=0.8, size=0.3)+
  ylab("PARin (W.m-2)")+
  ylim(0, 150)+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")


g_deg_doy_wtd_intact <- ggplot(deg_day, aes(doy,WTD_f, color=factor(year)))+
  geom_line(alpha=0.8, size=0.5)+
  ylab("WTD (cm)")+
  ylim(-30, 20)+
  theme_classic()+
  scale_x_continuous(breaks=seq(0,366, by=10), labels = label_at(50))+
  scale_color_manual(values=c("red","green","blue"))+
  theme(axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.border = element_rect(fill=NA))+
  labs(colour="Year")

g_deg_doy_wtd <- g_deg_doy_wtd_intact +
  theme(axis.title.x = element_blank(),
        axis.text.x = element_blank())

# g_deg_doy_snow <- ggplot(deg_aggr_biomet$day, aes(doy,SNOWd,color=factor(year)))+
#   geom_point(size=0.)+
#   ylab("SNOW height (m)")+
#   theme_classic()+
#   theme(panel.border = element_rect(fill=NA))+
#   scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
#   labs(colour="Year")


ggpubr::ggarrange(g_deg_doy, g_deg_doy_ts, g_deg_doy_wtd, ncol=1, common.legend = TRUE, align = "v", heights = c(1,1,1,1.20))



  ###sto
  g_sto_doy <- ggplot(sto_day, aes(doy,FCH4_sum, color=factor(year)))+
    geom_line(alpha=0.8, size=0.5)+
    ylab("FCH4 (g.m-2.d-1")+
    ylim(-0.01, 0.25)+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank(),
          panel.border = element_rect(fill=NA))+
    annotate(geom="text", -Inf, Inf, label=" Stortjärn", hjust=0, vjust=1)+
    labs(colour="Year")

  g_sto_doy_gpp <- ggplot(sto_day, aes(doy,GPP_sum, color=factor(year)))+
    geom_line(alpha=0.8, size=0.5)+
    ylim(0, 6)+
    ylab("GPP (gC.m-2.d-1")+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank(),
          panel.border = element_rect(fill=NA))+
    labs(colour="Year")

  g_sto_doy_reco <- ggplot(sto_day2, aes(doy,Reco_sum, color=factor(year)))+
    geom_line(alpha=0.8, size=0.5)+
    ylim(0, 6)+
    ylab("Reco (gC.m-2.d-1")+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank(),
          panel.border = element_rect(fill=NA))+
    labs(colour="Year")


  sto_day2 <- sto_day[which(!(sto_day$doy<50 & sto_day$year==2022)),]
  g_sto_doy_nee_intact <- ggplot(sto_day2, aes(doy,NEE_sum, color=factor(year)))+
    geom_point(data=sto_day, size=0.5, alpha=0.1)+
    geom_smooth(se=FALSE, span=0.1, alpha=0.8, size=0.5)+
    ylim(-2, 1)+
    ylab("NEE (gC.m-2.d-1")+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(#axis.title.x = element_blank(),
          #axis.text.x = element_blank(),
          panel.border = element_rect(fill=NA))+
    labs(colour="Year")
  g_sto_doy_nee <- g_sto_doy_nee_intact +
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank())

  g_sto_doy_ta <- ggplot(sto_day, aes(doy,Ta_f, color=factor(year)))+
    geom_line(alpha=0.8, size=0.5)+
    ylab("Ta (°C)")+
    ylim(-20, 28)+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank(),
          panel.border = element_rect(fill=NA))+
    labs(colour="Year")

  g_sto_doy_ts_intact <- ggplot(sto_day, aes(doy,Ts_f, color=factor(year)))+
    geom_line(alpha=0.8, size=0.5)+
    ylab("Ts 15cm (°C)")+
    ylim(-0.5, 20)+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(panel.border = element_rect(fill=NA))+
    labs(colour="Year")

  g_sto_doy_ts <- g_sto_doy_ts_intact +
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank())

  g_sto_doy_par <- ggplot(sto_day, aes(doy,PARin_f, color=factor(year)))+
    geom_point(size=0.3,alpha=0.8)+
    geom_smooth(se=FALSE, span=0.1, alpha=0.8, size=0.3)+
    ylab("PARin (W.m-2)")+
    ylim(0, 150)+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank(),
          #axis.title.y = element_blank(),
          #axis.text.y = element_blank(),
          panel.border = element_rect(fill=NA))+
    labs(colour="Year")


  g_sto_doy_wtd_intact <- ggplot(sto_day, aes(doy,WTD_f, color=factor(year)))+
    geom_line(alpha=0.8, size=0.5)+
    ylab("WTD (cm)")+
    ylim(-30, 20)+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10), labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(panel.border = element_rect(fill=NA))+
    labs(colour="Year")

  g_sto_doy_wtd <- g_sto_doy_wtd_intact +
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank())

  g_sto_doy_snow <- ggplot(sto_aggr_biomet$day, aes(doy,SNOWd,color=factor(year)))+
    geom_point(size=0.3, alpha=0.8)+
    ylab("SNOW height (m)")+
    ylim(0, 1)+
    theme_classic()+
    theme(panel.border = element_rect(fill=NA))+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    labs(colour="Year")


  ggpubr::ggarrange(g_sto_doy, g_sto_doy_ts, g_sto_doy_wtd, g_sto_doy_snow, ncol=1, common.legend = TRUE, align = "v", heights = c(1,1,1,1.20))



  ###hals
  g_hals_doy <- ggplot(hals_day, aes(doy,FCH4_sum, color=factor(year)))+
    geom_line(alpha=0.8, size=0.5)+
    ylab("FCH4 (g.m-2.d-1")+
    ylim(-0.01, 0.25)+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank(),
          axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          panel.border = element_rect(fill=NA))+
    annotate(geom="text", -Inf, Inf, label=" Hälsingfors", hjust=0, vjust=1)+
    labs(colour="Year")

  g_hals_doy_gpp <- ggplot(hals_day, aes(doy,GPP_sum, color=factor(year)))+
    geom_line(alpha=0.8, size=0.5)+
    ylim(0, 6)+
    ylab("GPP (gC.m-2.d-1")+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank(),
          axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          panel.border = element_rect(fill=NA))+
    labs(colour="Year")


  g_hals_doy_reco <- ggplot(hals_day, aes(doy,Reco_sum, color=factor(year)))+
    geom_line(alpha=0.8, size=0.5)+
    ylim(0, 6)+
    ylab("Reco (gC.m-2.d-1")+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank(),
          axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          panel.border = element_rect(fill=NA))+
    labs(colour="Year")


  g_hals_doy_nee_intact <- ggplot(hals_day, aes(doy,NEE_sum, color=factor(year)))+
    geom_point(alpha=0.1, size=0.5,)+
    geom_smooth(se=FALSE, span=0.1, alpha=0.8, size=0.5)+
    ylim(-2, 1)+
    ylab("NEE (gC.m-2.d-1")+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          panel.border = element_rect(fill=NA))+
    labs(colour="Year")

  g_hals_doy_nee <- g_hals_doy_nee_intact +
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank())

  g_hals_doy_ta_intact_withY <- ggplot(hals_day, aes(doy,Ta_f, color=factor(year)))+
    geom_line(alpha=0.8, size=0.5)+
    ylab("Ta (°C)")+
    ylim(-20, 28)+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(#axis.title.y = element_blank(),
          #axis.text.y = element_blank(),
          panel.border = element_rect(fill=NA))+
    labs(colour="Year")

  g_hals_doy_ta <-  g_hals_doy_ta_intact_withY +
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank())

  g_hals_doy_ta <- ggplot(hals_day, aes(doy,Ta_f, color=factor(year)))+
    geom_line(alpha=0.8, size=0.5)+
    ylab("Ta (°C)")+
    ylim(-20, 28)+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank(),
          axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          panel.border = element_rect(fill=NA))+
    labs(colour="Year")

  g_hals_doy_ts_intact <- ggplot(hals_day, aes(doy,Ts_f, color=factor(year)))+
    geom_line(alpha=0.8, size=0.5)+
    ylab("Ts 15cm (°C)")+
    ylim(-0.5, 20)+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          panel.border = element_rect(fill=NA))+
    labs(colour="Year")

  g_hals_doy_ts <- g_hals_doy_ts_intact +
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank())

  g_hals_doy_par <- ggplot(hals_day, aes(doy,PARin_f, color=factor(year)))+
    geom_point(size=0.3,alpha=0.8)+
    geom_smooth(se=FALSE, span=0.1, alpha=0.8, size=0.3)+
    ylab("PARin (W.m-2)")+
    ylim(0, 150)+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank(),
          axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          panel.border = element_rect(fill=NA))+
    labs(colour="Year")


  g_hals_doy_wtd_intact <- ggplot(hals_day, aes(doy,WTD_f, color=factor(year)))+
    geom_line(alpha=0.8, size=0.5)+
    ylab("WTD (cm)")+
    ylim(-30, 20)+
    theme_classic()+
    scale_x_continuous(breaks=seq(0,366, by=10), labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    theme(axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          panel.border = element_rect(fill=NA))+
    labs(colour="Year")

  g_hals_doy_wtd <- g_hals_doy_wtd_intact +
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank())


  g_hals_doy_snow <- ggplot(hals_aggr_biomet$day, aes(doy, SNOWd,color=factor(year)))+
    geom_point(size=0.3, alpha=0.8)+
    ylab("SNOW height (m)")+
    ylim(0, 1)+
    theme_classic()+
    theme(axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          panel.border = element_rect(fill=NA))+
    scale_x_continuous(breaks=seq(0,366, by=10),  labels = label_at(50))+
    scale_color_manual(values=c("red","green","blue"))+
    labs(colour="Year")


  ggpubr::ggarrange(g_hals_doy, g_hals_doy_ts, g_hals_doy_wtd, g_hals_doy_snow, ncol=1, common.legend = TRUE, align = "v", heights = c(1,1,1,1.20))


  #ALL

  # egg::ggarrange(g_sto_doy, g_sto_doy_ts, g_sto_doy_wtd, g_sto_doy_snow,
  #                g_halm_doy, g_halm_doy_ts, g_halm_doy_wtd, g_halm_doy_snow,
  #                g_hals_doy, g_hals_doy_ts, g_hals_doy_wtd, g_hals_doy_snow,
  #                g_deg_doy, g_deg_doy_ts, g_deg_doy_wtd)

#
#   ggpubr::ggarrange(g_sto_doy, g_hals_doy, g_halm_doy, g_deg_doy,
#                     g_sto_doy_ts, g_hals_doy_ts, g_halm_doy_ts, g_deg_doy_ts,
#                     g_sto_doy_wtd, g_hals_doy_wtd, g_halm_doy_wtd, g_deg_doy_wtd,
#                     g_sto_doy_snow, g_hals_doy_snow, g_halm_doy_snow, common.legend=TRUE, align="hv")
#
#
#   cowplot::plot_grid(g_sto_doy, g_hals_doy, g_halm_doy, g_deg_doy,
#                       g_sto_doy_ts, g_hals_doy_ts, g_halm_doy_ts, g_deg_doy_ts,
#                       g_sto_doy_wtd, g_hals_doy_wtd, g_halm_doy_wtd, g_deg_doy_wtd,
#                       g_sto_doy_snow, g_hals_doy_snow, g_halm_doy_snow, common.legend=TRUE, align="hv")

# egg::ggarrange(g_sto_doy, g_halm_doy, g_hals_doy, g_deg_doy,
#                     g_sto_doy_ts, g_halm_doy_ts, g_hals_doy_ts, g_deg_doy_ts,
#                     g_sto_doy_wtd, g_halm_doy_wtd, g_hals_doy_wtd, g_deg_doy_wtd,
#                     g_sto_doy_snow, g_halm_doy_snow, g_hals_doy_snow)


  # combined <- (g_sto_doy| g_hals_doy| g_halm_doy| g_deg_doy)/
  #   (g_sto_doy_ts| g_hals_doy_ts| g_halm_doy_ts| g_deg_doy_ts)/
  #   (g_sto_doy_wtd| g_hals_doy_wtd| g_halm_doy_wtd| g_deg_doy_wtd)/
  #   (g_sto_doy_snow| g_hals_doy_snow| g_halm_doy_snow) & theme(legend.position = "bottom")
  # combined + plot_layout(guides = "collect")


  #Original
  design <- "
  abcd
  efgh
  ijkl
  mno#
"

  combined <- g_sto_doy + g_hals_doy + g_halm_doy + g_deg_doy +
  g_sto_doy_ts + g_hals_doy_ts + g_halm_doy_ts + g_deg_doy_ts +
  g_sto_doy_wtd + g_hals_doy_wtd + g_halm_doy_wtd + g_deg_doy_wtd +
  g_sto_doy_snow + g_hals_doy_snow + g_halm_doy_snow + plot_layout(guides = "collect", design = design)

  combined
  ggsave("D:/EC/Data_organized/Graphs_all/all_doy.png", width=40, height=15, units="cm")

  #Original
  design <- "
  abcd
  efgh
  ijkl
  mnop
"

  combined <- g_sto_doy + g_hals_doy + g_halm_doy + g_deg_doy +
    g_sto_doy_nee + g_hals_doy_nee + g_halm_doy_nee + g_deg_doy_nee +
    g_sto_doy_ts + g_hals_doy_ts + g_halm_doy_ts + g_deg_doy_ts +
    g_sto_doy_wtd_intact + g_hals_doy_wtd_intact + g_halm_doy_wtd_intact + g_deg_doy_wtd_intact +
    plot_layout(guides = "collect", design = design)


  combined
  ggsave("D:/EC/Data_organized/Graphs_all/all_doy_simplified_for_halftime.png", width=40, height=15, units="cm")


  g_hals_doy_ta_intact_withY

  ggsave("D:/EC/Data_organized/Graphs_all/Single_Ta.png", width=15, height=8, units="cm")


  #Plotting
  design2 <- "
  abcd
  efgh
  ijkl
  mnop
  qrst
  uvw#
"

  combined <- g_sto_doy + g_hals_doy + g_halm_doy + g_deg_doy +
    g_sto_doy_ta + g_hals_doy_ta + g_halm_doy_ta + g_deg_doy_ta +
    g_sto_doy_ts + g_hals_doy_ts + g_halm_doy_ts + g_deg_doy_ts +
    g_sto_doy_wtd + g_hals_doy_wtd + g_halm_doy_wtd + g_deg_doy_wtd +
    g_sto_doy_par + g_hals_doy_par + g_halm_doy_par + g_deg_doy_par +
    g_sto_doy_snow + g_hals_doy_snow + g_halm_doy_snow + plot_layout(guides = "collect", design = design2)

  combined


  ggsave("D:/EC/Data_organized/Graphs_all/all_doy_biomet.png", width=45, height=25, units="cm")



  design3 <- "
  abcd
  efgh
  ijkl
  mnop
  qrst
  uvwx
"

  combined <- g_sto_doy + g_hals_doy + g_halm_doy + g_deg_doy +
    g_sto_doy_gpp + g_hals_doy_gpp + g_halm_doy_gpp + g_deg_doy_gpp +
    g_sto_doy_reco + g_hals_doy_reco + g_halm_doy_reco + g_deg_doy_reco +
    g_sto_doy_nee + g_hals_doy_nee + g_halm_doy_nee + g_deg_doy_nee +
    g_sto_doy_ts + g_hals_doy_ts + g_halm_doy_ts + g_deg_doy_ts +
    g_sto_doy_wtd_intact + g_hals_doy_wtd_intact + g_halm_doy_wtd_intact + g_deg_doy_wtd_intact +
    plot_layout(guides = "collect", design = design3)

  combined


  ggsave("D:/EC/Data_organized/Graphs_all/all_doy_fluxes.png", width=45, height=25, units="cm")




  ###########################################################
  ###########Binned plots
  #################################################################
  midcut<-function(x,from,to,by){
    ## cut the data into bins...
    x=cut(x,seq(from,to,by),include.lowest=T)
    ## make a named vector of the midpoints, names=binnames
    vec=seq(from+by/2,to-by/2,by)
    names(vec)=levels(x)
    ## use the vector to map the names of the bins to the midpoint values
    unname(vec[x])
  }

  halm_day_binned <- halm_day %>%
    mutate(FCH4_bin = midcut(FCH4_sum, -0.1, 0.3, 0.01),
           GPP_bin = midcut(GPP_sum, 0, 8, 0.1),
           Reco_bin = midcut(Reco_sum, 0, 8, 0.1),
           Ts_bin = midcut(Ts_f, -10,30,1),
           WTD_bin = midcut(WTD_f, -30,30,5))

  ggplot(halm_day_binned%>% filter(year==2020), aes(GPP_bin, FCH4_bin))+
    geom_point()+
    theme_classic()+
    theme(panel.border = element_rect(fill=NA))


  ggplot(halm_day_binned%>% filter(year==2020), aes(Ts_bin, FCH4_bin))+
    geom_point()+
    theme_classic()+
    theme(panel.border = element_rect(fill=NA))


  ggplot(halm_day_binned%>% filter(year==2020), aes(Ts_f, FCH4_sum))+
    geom_point()+
    theme_classic()+
    theme(panel.border = element_rect(fill=NA))

  ggplot(halm_day_binned%>% filter(year==2020), aes(WTD_bin, FCH4_bin))+
    geom_point()+
    theme_classic()+
    theme(panel.border = element_rect(fill=NA))


  #################################################################
  #####################PCA
  ###################################################################
  #Halmyran
  df_month <- Reduce(function(...) rbind(...), list(deg_month, halm_month, hals_month, sto_month))

  df_month_noNA <- df_month %>%
    filter(Site=="Halmyran") %>%
    select(FCH4_sum,NEE_sum,GPP_sum, Reco_sum, H2O_sum, Ta_f,WTD_f,Ts1,Ts2,Ts_f,Ts4,Ts5,PARin_f) %>%
    na.omit()
  # methane_gf <- df_month_noNA %>%
  #   filter(quality=="gapfilled" & Site=="Hålmyran") %>%
  #   select(-c("datetime","date","quality","month"))
  pca_gf <- prcomp(df_month_noNA, scale. = TRUE)
  summary(pca_gf)
  biplot(pca_gf)


  fviz_pca_biplot(pca_gf,geom="point",palette = "green",title = NULL,pointsize = 0.1)#habillage = methane_gf$Site)

  fviz_pca_var(pca_gf,
               col.var = "contrib", # Color by contributions to the PC
               gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
               repel = TRUE     # Avoid text overlapping
  )+ xlim(1,-1)


  ggsave("D:/EC/Data_organized/Graphs_all/pca_loadings_Halm.jpg",width = 15, height = 15, unit="cm")


  #Degero

  df_month_noNA <- df_month %>%
    filter(Site=="Degero") %>%
    select(FCH4_sum,NEE_sum,GPP_sum, Reco_sum, H2O_sum, Ta_f,WTD_f,Ts1,Ts2,Ts_f,Ts4,Ts5,PARin_f) %>%
    na.omit()
  # methane_gf <- df_month_noNA %>%
  #   filter(quality=="gapfilled" & Site=="Hålmyran") %>%
  #   select(-c("datetime","date","quality","month"))
  pca_gf <- prcomp(df_month_noNA, scale. = TRUE)
  summary(pca_gf)
  biplot(pca_gf)


  fviz_pca_biplot(pca_gf,geom="point",palette = "green",title = NULL,pointsize = 0.1)#habillage = methane_gf$Site)

  fviz_pca_var(pca_gf,
               col.var = "contrib", # Color by contributions to the PC
               gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
               repel = TRUE     # Avoid text overlapping
  )



  ggsave("D:/EC/Data_organized/Graphs_all/pca_loadings_Deg.jpg",width = 15, height = 15, unit="cm")



  #Halsingfors

  df_month_noNA <- df_month %>%
    filter(Site=="Halsingfors") %>%
    select(FCH4_sum,NEE_sum,GPP_sum, Reco_sum, H2O_sum, Ta_f,WTD_f,Ts1,Ts2,Ts_f,Ts4,Ts5,PARin_f) %>%
    na.omit()
  # methane_gf <- df_month_noNA %>%
  #   filter(quality=="gapfilled" & Site=="Hålmyran") %>%
  #   select(-c("datetime","date","quality","month"))
  pca_gf <- prcomp(df_month_noNA, scale. = TRUE)
  summary(pca_gf)
  biplot(pca_gf)


  fviz_pca_biplot(pca_gf,geom="point",palette = "green",title = NULL,pointsize = 0.1)#habillage = methane_gf$Site)

  fviz_pca_var(pca_gf,
               col.var = "contrib", # Color by contributions to the PC
               gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
               repel = TRUE     # Avoid text overlapping
  )+ xlim(1,-1)+ylim(1,-1)



  ggsave("D:/EC/Data_organized/Graphs_all/pca_loadings_Hals.jpg",width = 15, height = 15, unit="cm")


  #Stortjarn

  df_month_noNA <- df_month %>%
    filter(Site=="Stortjarn") %>%
    select(FCH4_sum,NEE_sum,GPP_sum, Reco_sum, H2O_sum, Ta_f,WTD_f,Ts1,Ts2,Ts_f,Ts4,Ts5,PARin_f) %>%
    na.omit()
  # methane_gf <- df_month_noNA %>%
  #   filter(quality=="gapfilled" & Site=="Hålmyran") %>%
  #   select(-c("datetime","date","quality","month"))
  pca_gf <- prcomp(df_month_noNA, scale. = TRUE)
  summary(pca_gf)
  biplot(pca_gf)


  fviz_pca_biplot(pca_gf,geom="point",palette = "green",title = NULL,pointsize = 0.1)#habillage = methane_gf$Site)

  fviz_pca_var(pca_gf,
               col.var = "contrib", # Color by contributions to the PC
               gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
               repel = TRUE     # Avoid text overlapping
  ) + xlim(1,-1)



  ggsave("D:/EC/Data_organized/Graphs_all/pca_loadings_sto.jpg",width = 15, height = 15, unit="cm")



  ###MEAN WTL
  halm_month %>%
    filter(month %in% 5:10) %>%
    group_by(period) %>%
    summarise(mean_wTL=mean(WTD_f, na.rm=TRUE),
              sd_wTL=sd(WTD_f, na.rm=TRUE))

  deg_month %>%
    filter(month %in% 5:10) %>%
    group_by(period) %>%
    summarise(mean_wTL=mean(WTD_f, na.rm=TRUE),
              sd_wTL=sd(WTD_f, na.rm=TRUE))

  hals_month %>%
    filter(month %in% 5:10) %>%
    group_by(period) %>%
    summarise(mean_wTL=mean(WTD_f, na.rm=TRUE),
              sd_wTL=sd(WTD_f, na.rm=TRUE))

  sto_month %>%
    filter(month %in% 5:10) %>%
    group_by(period) %>%
    summarise(mean_wTL=mean(WTD_f, na.rm=TRUE),
              sd_wTL=sd(WTD_f, na.rm=TRUE))





  ######################Intersite variability graphs




ch4 <- all_site_mean_sd_plotter(list_df=list(halm_day,deg_day,sto_day,hals_day), y_col = "mean_FCH4", sd_col="sd_FCH4", show_x_label = FALSE, y_label = expression(atop("mean ± sd FCH4","(g. m-2. d-1)")))

gpp <-   all_site_mean_sd_plotter(list_df=list(halm_day,deg_day,sto_day,hals_day), y_col = "mean_GPP", sd_col="sd_GPP", show_x_label = FALSE, y_label = expression(atop("mean ± sd GPP","(gC. m-2. d-1)")), GPP=TRUE)

reco <-   all_site_mean_sd_plotter(list_df=list(halm_day,deg_day,sto_day,hals_day), y_col = "mean_Reco", sd_col="sd_Reco", show_x_label = FALSE, y_label = expression(atop("mean ± sd Reco","(gC. m-2. d-1)")), Reco=TRUE)

nee <-   all_site_mean_sd_plotter(list_df=list(halm_day,deg_day,sto_day,hals_day), y_col = "mean_NEE", sd_col="sd_NEE", show_x_label = FALSE, y_label = expression(atop("mean ± sd NEE","(gC. m-2. d-1)")), NEE=TRUE)

ta <-   all_site_mean_sd_plotter(list_df=list(halm_day,deg_day,sto_day,hals_day), y_col = "mean_Ta", sd_col="sd_Ta", show_x_label = FALSE, y_label = "mean ± sd Ta(°C)")

ts <-   all_site_mean_sd_plotter(list_df=list(halm_day,deg_day,sto_day,hals_day), y_col = "mean_Ts", sd_col="sd_Ts", show_x_label = FALSE, y_label = "mean ± sd Ts 15cm(°C)")

ts1 <-   all_site_mean_sd_plotter(list_df=list(halm_day,deg_day,sto_day,hals_day), y_col = "mean_Ts1", sd_col="sd_Ts1", show_x_label = FALSE, y_label = "mean ± sd Ts 2cm(°C)")

ts2 <-   all_site_mean_sd_plotter(list_df=list(halm_day,deg_day,sto_day,hals_day), y_col = "mean_Ts2", sd_col="sd_Ts2", show_x_label = FALSE, y_label = "mean ± sd Ts 10cm(°C)")

ts4 <-   all_site_mean_sd_plotter(list_df=list(halm_day,deg_day,sto_day,hals_day), y_col = "mean_Ts4", sd_col="sd_Ts4", show_x_label = FALSE, y_label = "mean ± sd Ts 30cm(°C)")

ts5 <-   all_site_mean_sd_plotter(list_df=list(halm_day,deg_day,sto_day,hals_day), y_col = "mean_Ts5", sd_col="sd_Ts5", show_x_label = FALSE, y_label = "mean ± sd Ts 50cm(°C)")

par <-   all_site_mean_sd_plotter(list_df=list(halm_day,deg_day,sto_day,hals_day), y_col = "mean_PAR", sd_col="sd_PAR", show_x_label = FALSE, y_label = "mean ± sd PARin(W.m-2)")

wtd <-   all_site_mean_sd_plotter(list_df=list(halm_day,deg_day,sto_day,hals_day), y_col = "mean_WTD", sd_col="sd_WTD", show_x_label = TRUE, y_label = "mean ± sd WTD(cm)")



ggarrange(ch4,gpp,ta,ts,par,wtd, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1.45))

#ggsave("D:/EC/Data_organized/Graphs_all/all_variables.png", height=32,width=25, units = "cm")


ggarrange(ta,ts1,ts2,ts,ts4,par,wtd, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1,1.50))
#ggsave("D:/EC/Data_organized/Graphs_all/all_met.png", height=35,width=25, units = "cm")

ggarrange(ch4,nee,gpp, reco,ts,wtd, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1.40))
#ggsave("D:/EC/Data_organized/Graphs_all/fluxes_only.png", height=32,width=25, units = "cm")

ggarrange(ch4,nee,gpp, reco,ts,wtd, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1.40))
ggsave("D:/EC/Data_organized/Graphs_all/intersite_variability1.png", height=32,width=25, units = "cm")

ggarrange(ch4,gpp,ta,par,ts2,wtd, ncol = 1, common.legend = TRUE, align = "v", heights = c(1,1,1,1,1,1.40))
ggsave("D:/EC/Data_organized/Graphs_all/intersite_variability2.png", height=32,width=25, units = "cm")


  # ggplot(all_daily_mean_sd, aes(x=date, y=mean_FCH4))+
  #   geom_point()+
  #   geom_ribbon(aes(y = mean_FCH4, ymin = mean_FCH4 - sd_FCH4, ymax = mean_FCH4 + sd_FCH4), alpha = .2, fill = "blue")+
  #   ggplot2::theme_classic()+
  #   ggplot2::scale_x_date(breaks = "1 month", labels=scales::date_format("%b/%Y"))+
  #   ggplot2::theme(panel.border = ggplot2::element_rect(fill=NA,size=1))+#,axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  #   theme(axis.text.x = ggplot2::element_text(angle = 90))

  # if(isTRUE(show_x_label)){
  #   g <- g + ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90))
  # }
  #
  # if(isFALSE(show_x_label)){
  #   g <- g + ggplot2::theme(axis.text.x = ggplot2::element_blank(), axis.title.x=ggplot2::element_blank())
  # }


#daily

df <- Reduce(function(...) rbind(...), list(halm_day,deg_day,sto_day,hals_day))

df2 <- df %>%
  group_by(date) %>%
  summarise(mean_FCH4 = mean(FCH4_sum),
            mean_GPP = mean(GPP_sum),
            mean_Reco = mean(Reco_sum),
            mean_NEE = mean(NEE_sum),
            mean_Ta = mean(Ta_f),
            mean_Ts = mean(Ts_f),
            mean_Ts1 = mean(Ts1),
            mean_Ts2 = mean(Ts2),
            mean_Ts4 = mean(Ts4),
            mean_Ts5 = mean(Ts5),
            mean_PAR = mean(PARin_f),
            mean_WTD = mean(WTD_f),
            sd_FCH4 = sd(FCH4_sum),
            sd_GPP = sd(GPP_sum),
            sd_Reco = sd(Reco_sum),
            sd_NEE = sd(NEE_sum),
            sd_Ta = sd(Ta_f),
            sd_Ts = sd(Ts_f),
            sd_Ts1 = sd(Ts1),
            sd_Ts2 = sd(Ts2),
            sd_Ts4 = sd(Ts4),
            sd_Ts5 = sd(Ts5),
            sd_PAR = sd(PARin_f),
            sd_WTD = sd(WTD_f))

# df2[,"y_min"] <- df2[,y_col] - df2[,sd_col]
# df2[,"y_max"] <- df2[,y_col] + df2[,sd_col]

plot(sd_FCH4~sd_NEE, data=df2)
plot(sd_FCH4~sd_GPP, data=df2)
plot(sd_FCH4~sd_Reco, data=df2)
plot(sd_FCH4~sd_Ts, data=df2)
plot(sd_FCH4~sd_PAR, data=df2)
plot(mean_FCH4~mean_PAR, data=df2)

#monthly
df <- Reduce(function(...) rbind(...), list(halm_month,deg_month,sto_month,hals_month))

df2 <- df %>%
  group_by(year, month) %>%
  summarise(mean_FCH4 = mean(FCH4_sum),
            mean_GPP = mean(GPP_sum),
            mean_Reco = mean(Reco_sum),
            mean_NEE = mean(NEE_sum),
            mean_Ta = mean(Ta_f),
            mean_Ts = mean(Ts_f),
            mean_Ts1 = mean(Ts1),
            mean_Ts2 = mean(Ts2),
            mean_Ts4 = mean(Ts4),
            mean_Ts5 = mean(Ts5),
            mean_PAR = mean(PARin_f),
            mean_WTD = mean(WTD_f),
            sd_FCH4 = sd(FCH4_sum),
            sd_GPP = sd(GPP_sum),
            sd_Reco = sd(Reco_sum),
            sd_NEE = sd(NEE_sum),
            sd_Ta = sd(Ta_f),
            sd_Ts = sd(Ts_f),
            sd_Ts1 = sd(Ts1),
            sd_Ts2 = sd(Ts2),
            sd_Ts4 = sd(Ts4),
            sd_Ts5 = sd(Ts5),
            sd_PAR = sd(PARin_f),
            sd_WTD = sd(WTD_f))

# df2[,"y_min"] <- df2[,y_col] - df2[,sd_col]
# df2[,"y_max"] <- df2[,y_col] + df2[,sd_col]

plot(sd_FCH4~sd_NEE, data=df2)
plot(sd_FCH4~sd_GPP, data=df2)
plot(sd_FCH4~sd_Reco, data=df2)
plot(sd_FCH4~sd_Ts, data=df2)
plot(sd_FCH4~sd_PAR, data=df2)
plot(mean_FCH4~mean_PAR, data=df2)
