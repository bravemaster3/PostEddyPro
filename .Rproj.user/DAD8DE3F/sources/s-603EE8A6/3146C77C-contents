#dir <- "C:/BRAVE/slu/eddy_covariance/myphd/R_codes/halsingfors_for_Marcus/new_flow/monte_carlo/output/" #update the file path and file name accordingly

# df_monte_carlo <- NULL
library(hms)
library(lubridate)
library(data.table)
library(dplyr)
library(bigleaf)

# 
# 
# 
# for(i in 1:100){
#   #i=1
#   print(paste("Now reading file", i))
#   file_path <- paste0(dir, "EQTP_output_sim",i,".txt") 
#   headers <- scan(file_path, what = character(), nlines = 1, sep="\t")
#   #units <- scan(file_path, what = character(), nlines = 1, skip=1,sep="\t")
#   
#   df_i <- read.table(file_path, header=FALSE,skip=2,sep="\t")
#   
#   colnames(df_i) <- headers
#   
#   df_i$date <- as.Date(df_i$DoY, origin = paste0(df_i$Year-1,"-12-31"))
#   df_i$time <- hms(hours=df_i$Hour)
#   
#   df_i$datetime <- as.POSIXct(paste(df_i$date,df_i$time), format="%Y-%m-%d %H:%M",tz="UTC")
#   
#   df_i[df_i== -9999] <- NA
# 
#   
#   df_i <- df_i[,c("datetime","NEE_f","GPP_f","Reco")]
#   
#   df_i$iteration <- i
#   if(i==1) df_monte_carlo <- df_i
#   if(i >1) df_monte_carlo <- merge(df_monte_carlo,df_i, all=TRUE)
# }
# 
# View(df_monte_carlo)
# 
# 
# 


indiv_df_function <- function(i, dir){
  print(paste("Now reading file", i))
  file_path <- paste0(dir, "EQTP_output_sim",i,".txt") 
  headers <- scan(file_path, what = character(), nlines = 1, sep="\t")
  #units <- scan(file_path, what = character(), nlines = 1, skip=1,sep="\t")
  
  df_i <- read.table(file_path, header=FALSE,skip=2,sep="\t")
  
  colnames(df_i) <- headers
  
  df_i$date <- as.Date(df_i$DoY, origin = paste0(df_i$Year-1,"-12-31"))
  df_i$time <- hms(hours=df_i$Hour)
  
  df_i$datetime <- as.POSIXct(paste(df_i$date,df_i$time), format="%Y-%m-%d %H:%M",tz="UTC")
  
  df_i[df_i== -9999] <- NA
  
  
  df_i <- df_i[,c("datetime","NEE_f","GPP_f","Reco")]
  
  df_i$iteration <- i
  return(df_i)

}

#Function based on bigleaf function to bring back their daily result to half-hourly
umolCO2m2s.to.gCm2.30min <- function(co2_flux){
  umolCO2.to.gC(co2_flux)/48 #48 here is the number of 30min in a day because their result otherwise would be per day.
}

#uncomment the following 5 lines to run them, it takes time. so, if it has been run already, just load from disk
# datalist <- lapply(as.list(c(1:100)), FUN=indiv_df_function, dir="C:/BRAVE/slu/eddy_covariance/myphd/R_codes/halsingfors_for_Marcus/new_flow/monte_carlo/output/")
# df_monte_carlo <- NULL
# df_monte_carlo <- Reduce(function(x,y) {merge(x, y, all = TRUE)}, datalist)
# df_mc_ordered  <- df_monte_carlo[order(df_monte_carlo$datetime, df_monte_carlo$iteration), ]
# fwrite(df_mc_ordered, "C:/BRAVE/slu/eddy_covariance/myphd/R_codes/halsingfors_for_Marcus/new_flow/monte_carlo/final/monte_carlo_all_CO2.csv", dateTimeAs = "write.csv")

df_mc <- fread("C:/BRAVE/slu/eddy_covariance/myphd/R_codes/halsingfors_for_Marcus/new_flow/monte_carlo/final/monte_carlo_all_CO2.csv")


#30 min...
df_30min <- df_mc %>%
  mutate(NEE_f=umolCO2m2s.to.gCm2.30min(NEE_f),
         GPP_f=umolCO2m2s.to.gCm2.30min(GPP_f),
         Reco=umolCO2m2s.to.gCm2.30min(Reco)) %>%
  group_by(datetime) %>%
  summarise(NEE_sd = sd(NEE_f),
            GPP_sd = sd(GPP_f),
            Reco_sd = sd(Reco))
fwrite(df_30min, "C:/BRAVE/slu/eddy_covariance/myphd/R_codes/halsingfors_for_Marcus/new_flow/monte_carlo/final/monte_carlo_CO2_30min_SD.csv", dateTimeAs = "write.csv")


#day...
df_day <- df_mc %>%
  mutate(NEE_f=umolCO2m2s.to.gCm2.30min(NEE_f),
         GPP_f=umolCO2m2s.to.gCm2.30min(GPP_f),
         Reco=umolCO2m2s.to.gCm2.30min(Reco),
         date=as.Date(datetime)) %>%
  group_by(date,iteration) %>%
  summarise(NEE_sum = sum(NEE_f),
            GPP_sum = sum(GPP_f),
            Reco_sum = sum(Reco)) %>%
  group_by(date) %>%
  summarise(NEE_sd = sd(NEE_sum),
            GPP_sd = sd(GPP_sum),
            Reco_sd = sd(Reco_sum))

fwrite(df_day, "C:/BRAVE/slu/eddy_covariance/myphd/R_codes/halsingfors_for_Marcus/new_flow/monte_carlo/final/monte_carlo_CO2_day_SD.csv", dateTimeAs = "write.csv")


#month...
df_month <- df_mc %>%
  mutate(NEE_f=umolCO2m2s.to.gCm2.30min(NEE_f),
         GPP_f=umolCO2m2s.to.gCm2.30min(GPP_f),
         Reco=umolCO2m2s.to.gCm2.30min(Reco),
         year = year(datetime),
         month = month(datetime)) %>%
  group_by(year,month,iteration) %>%
  summarise(NEE_sum = sum(NEE_f),
            GPP_sum = sum(GPP_f),
            Reco_sum = sum(Reco)) %>%
  group_by(year,month) %>%
  summarise(NEE_sd = sd(NEE_sum),
            GPP_sd = sd(GPP_sum),
            Reco_sd = sd(Reco_sum))

fwrite(df_month, "C:/BRAVE/slu/eddy_covariance/myphd/R_codes/halsingfors_for_Marcus/new_flow/monte_carlo/final/monte_carlo_CO2_month_SD.csv", dateTimeAs = "write.csv")



#################NOW LET'S AGGREGATE ALSO CO2 fluxes

headers <- scan("C:/BRAVE/slu/eddy_covariance/myphd/Data_organized/Halsingfors/Eddypro_output/Halsingfors_ReddyProc_GF.txt", what = character(), nlines = 1, sep="\t")
units <- scan("C:/BRAVE/slu/eddy_covariance/myphd/Data_organized/Halsingfors/Eddypro_output/Halsingfors_ReddyProc_GF.txt", what = character(), nlines = 1, skip=1,sep="\t")

halsingfors <- read.table("C:/BRAVE/slu/eddy_covariance/myphd/Data_organized/Halsingfors/Eddypro_output/Halsingfors_ReddyProc_GF.txt", header=FALSE,skip=2,sep="\t")

colnames(halsingfors) <- headers

halsingfors$date <- as.Date(halsingfors$DoY, origin = paste0(halsingfors$Year-1,"-12-31"))
halsingfors$time <- hms::hms(hours=halsingfors$Hour)

halsingfors$datetime <- as.POSIXct(paste(halsingfors$date,halsingfors$time), format="%Y-%m-%d %H:%M",tz="UTC")

halsingfors[halsingfors== -9999] <- NA

halsingfors <- halsingfors %>%
  mutate(NEE=umolCO2m2s.to.gCm2.30min(NEE),
         NEE_f=umolCO2m2s.to.gCm2.30min(NEE_f),
         GPP_f=umolCO2m2s.to.gCm2.30min(GPP_f),
         Reco=umolCO2m2s.to.gCm2.30min(Reco))
  

#30min...
halsingfors_30min <- halsingfors %>%
  select(c("datetime","NEE","NEE_f","GPP_f","Reco"))%>%
  merge(df_30min, by="datetime", all=TRUE)

fwrite(halsingfors_30min, "C:/BRAVE/slu/eddy_covariance/myphd/Data_organized/Halsingfors/Eddypro_output/Halsingfors_ReddyProc_GF_30min.csv", dateTimeAs = "write.csv")



#day...
halsingfors_day <- halsingfors %>%
  mutate(date=as.Date(datetime)) %>%
  group_by(date) %>%
  summarise(NEE_sum = sum(NEE_f),
            GPP_sum = sum(GPP_f),
            Reco_sum = sum(Reco))%>%
  merge(df_day, by="date", all=TRUE)

fwrite(halsingfors_day, "C:/BRAVE/slu/eddy_covariance/myphd/Data_organized/Halsingfors/Eddypro_output/Halsingfors_ReddyProc_GF_day.csv", dateTimeAs = "write.csv")

plot(GPP_sum~date, data=halsingfors_day, type="l")
lines(halsingfors_day$date,halsingfors_day$GPP_sum-df_day$GPP_sd, col="red")
lines(halsingfors_day$date,halsingfors_day$GPP_sum+df_day$GPP_sd, col="red")

#month...
halsingfors_month <- halsingfors %>%
  mutate(year = year(datetime),
         month = month(datetime)) %>%
  group_by(year,month) %>%
  summarise(NEE_sum = sum(NEE_f),
            GPP_sum = sum(GPP_f),
            Reco_sum = sum(Reco))%>%
  merge(df_month, by=c("year","month"), all=TRUE)

fwrite(halsingfors_month, "C:/BRAVE/slu/eddy_covariance/myphd/Data_organized/Halsingfors/Eddypro_output/Halsingfors_ReddyProc_GF_month.csv", dateTimeAs = "write.csv")

halsingfors_month$yearmon <- zoo::as.yearmon(paste(halsingfors_month$year,halsingfors_month$month,sep="-"))
halsingfors_month <- halsingfors_month %>%
  arrange(yearmon)

df_month$yearmon <- zoo::as.yearmon(paste(df_month$year,df_month$month,sep="-"))
df_month <- df_month%>%
  arrange(yearmon)

plot(NEE_sum~yearmon, data=halsingfors_month, type="l")
lines(halsingfors_month$yearmon,halsingfors_month$NEE_sum-df_month$NEE_sd, col="red")
lines(halsingfors_month$yearmon,halsingfors_month$NEE_sum+df_month$NEE_sd, col="red")

