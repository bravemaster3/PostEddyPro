################NOW trying to plot all points
#Direct measures of Water table depth
ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halmyran"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
#Water table above sea level Z from 3 cm DEM from UAV. !!! Important to remember the altitudes are not exact, to compare between sites.
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
library(readxl)
library(dplyr)
library(ggplot2)
library(plotly)
library(sf)
sto_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Stortjärn") %>%
mutate(Site = "Stortjarn")
halm_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Hålmyran") %>%
mutate(Site = "Halmyran")
hals_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Hälsingfors") %>%
mutate(Site = "Halsingfors")
degfert_wtd <- Reduce(rbind, list(sto_wtd, halm_wtd, hals_wtd))
degfert_wtd$WTD <- degfert_wtd$WTD/100
degfert_wtd$Date <- as.Date(degfert_wtd$Date)
degfert_wtd$wat <- paste0('W',degfert_wtd$`Tube number`)
ggplot(degfert_wtd %>% filter(Site=="Stortjarn"), aes(Date, WTD, group=Site, color=Site))+
geom_point()+
theme_bw()
##Importing extracted DTW
dtw <- sf::read_sf("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Shapefiles/Extracted/Degfert_DTW_05.shp")
wtd_dtw <- merge(degfert_wtd, dtw, by=c("wat", "Site"))
#######################################
#calculations on all the dataset
wtd_dtw$water_table <- wtd_dtw$Elev - wtd_dtw$WTD
wtd_dtw$water_table_DEM05 <- wtd_dtw$Z_05 - wtd_dtw$WTD
wtd_dtw$water_table_DEM003 <- wtd_dtw$Z_UAV - wtd_dtw$WTD
#Filtering a given date
wtd_select <- wtd_dtw %>% filter(Date %in% as.Date(c("2021-07-26", "2021-07-27")))
wtd_select$water_table <- wtd_select$Elev - wtd_select$WTD
wtd_select$water_table_DEM05 <- wtd_select$Z_05 - wtd_select$WTD
wtd_select$water_table_DEM003 <- wtd_select$Z_UAV - wtd_select$WTD
ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
#Water table above sea level Z from GPS
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
#Water table above sea level Z from 50 cm DEM
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
#Water table above sea level Z from 3 cm DEM from UAV. !!! Important to remember the altitudes are not exact, to compare between sites.
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
################NOW trying to plot all points
#Direct measures of Water table depth
ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halmyran"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
#Water table above sea level Z from 3 cm DEM from UAV. !!! Important to remember the altitudes are not exact, to compare between sites.
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
library(readxl)
library(dplyr)
library(ggplot2)
library(plotly)
library(sf)
sto_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Stortjärn") %>%
mutate(Site = "Stortjarn")
halm_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Hålmyran") %>%
mutate(Site = "Halmyran")
hals_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Hälsingfors") %>%
mutate(Site = "Halsingfors")
degfert_wtd <- Reduce(rbind, list(sto_wtd, halm_wtd, hals_wtd))
degfert_wtd$WTD <- degfert_wtd$WTD/100
degfert_wtd$Date <- as.Date(degfert_wtd$Date)
degfert_wtd$wat <- paste0('W',degfert_wtd$`Tube number`)
ggplot(degfert_wtd %>% filter(Site=="Stortjarn"), aes(Date, WTD, group=Site, color=Site))+
geom_point()+
theme_bw()
##Importing extracted DTW
dtw <- sf::read_sf("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Shapefiles/Extracted/Degfert_DTW_05.shp")
wtd_dtw <- merge(degfert_wtd, dtw, by=c("wat", "Site"))
#######################################
#calculations on all the dataset
wtd_dtw$water_table <- wtd_dtw$Elev - wtd_dtw$WTD
wtd_dtw$water_table_DEM05 <- wtd_dtw$Z_05 - wtd_dtw$WTD
wtd_dtw$water_table_DEM003 <- wtd_dtw$Z_UAV - wtd_dtw$WTD
#Filtering a given date
wtd_select <- wtd_dtw %>% filter(Date %in% as.Date(c("2021-07-26", "2021-07-27")))
wtd_select$water_table <- wtd_select$Elev - wtd_select$WTD
wtd_select$water_table_DEM05 <- wtd_select$Z_05 - wtd_select$WTD
wtd_select$water_table_DEM003 <- wtd_select$Z_UAV - wtd_select$WTD
ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
#Water table above sea level Z from GPS
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
#Water table above sea level Z from 50 cm DEM
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
#Water table above sea level Z from 3 cm DEM from UAV. !!! Important to remember the altitudes are not exact, to compare between sites.
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
################NOW trying to plot all points
#Direct measures of Water table depth
ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halmyran"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
#Water table above sea level Z from 3 cm DEM from UAV. !!! Important to remember the altitudes are not exact, to compare between sites.
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
library(readxl)
library(dplyr)
library(ggplot2)
library(plotly)
library(sf)
sto_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Stortjärn") %>%
mutate(Site = "Stortjarn")
halm_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Hålmyran") %>%
mutate(Site = "Halmyran")
hals_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Hälsingfors") %>%
mutate(Site = "Halsingfors")
degfert_wtd <- Reduce(rbind, list(sto_wtd, halm_wtd, hals_wtd))
degfert_wtd$WTD <- degfert_wtd$WTD/100
degfert_wtd$Date <- as.Date(degfert_wtd$Date)
degfert_wtd$wat <- paste0('W',degfert_wtd$`Tube number`)
ggplot(degfert_wtd %>% filter(Site=="Stortjarn"), aes(Date, WTD, group=Site, color=Site))+
geom_point()+
theme_bw()
##Importing extracted DTW
dtw <- sf::read_sf("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Shapefiles/Extracted/Degfert_DTW_05.shp")
wtd_dtw <- merge(degfert_wtd, dtw, by=c("wat", "Site"))
#######################################
#calculations on all the dataset
wtd_dtw$water_table <- wtd_dtw$Elev - wtd_dtw$WTD
wtd_dtw$water_table_DEM05 <- wtd_dtw$Z_05 - wtd_dtw$WTD
wtd_dtw$water_table_DEM003 <- wtd_dtw$Z_UAV - wtd_dtw$WTD
#Filtering a given date
wtd_select <- wtd_dtw %>% filter(Date %in% as.Date(c("2021-07-26", "2021-07-27")))
wtd_select$water_table <- wtd_select$Elev - wtd_select$WTD
wtd_select$water_table_DEM05 <- wtd_select$Z_05 - wtd_select$WTD
wtd_select$water_table_DEM003 <- wtd_select$Z_UAV - wtd_select$WTD
ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
#Water table above sea level Z from GPS
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
#Water table above sea level Z from 50 cm DEM
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
#Water table above sea level Z from 3 cm DEM from UAV. !!! Important to remember the altitudes are not exact, to compare between sites.
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
################NOW trying to plot all points
#Direct measures of Water table depth
ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halmyran"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
#Water table above sea level Z from 3 cm DEM from UAV. !!! Important to remember the altitudes are not exact, to compare between sites.
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halmyran"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
#Water table above sea level Z from GPS
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
#Water table above sea level Z from 50 cm DEM
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
#Water table above sea level Z from 3 cm DEM from UAV. !!! Important to remember the altitudes are not exact, to compare between sites.
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
library(readxl)
library(dplyr)
library(ggplot2)
library(plotly)
library(sf)
sto_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Stortjärn") %>%
mutate(Site = "Stortjarn")
halm_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Hålmyran") %>%
mutate(Site = "Halmyran")
hals_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Hälsingfors") %>%
mutate(Site = "Halsingfors")
degfert_wtd <- Reduce(rbind, list(sto_wtd, halm_wtd, hals_wtd))
degfert_wtd$WTD <- degfert_wtd$WTD/100
degfert_wtd$Date <- as.Date(degfert_wtd$Date)
degfert_wtd$wat <- paste0('W',degfert_wtd$`Tube number`)
ggplot(degfert_wtd %>% filter(Site=="Stortjarn"), aes(Date, WTD, group=Site, color=Site))+
geom_point()+
theme_bw()
##Importing extracted DTW
dtw <- sf::read_sf("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Shapefiles/Extracted/Degfert_DTW_05.shp")
wtd_dtw <- merge(degfert_wtd, dtw, by=c("wat", "Site"))
#######################################
#calculations on all the dataset
wtd_dtw$water_table <- wtd_dtw$Elev - wtd_dtw$WTD
wtd_dtw$water_table_DEM05 <- wtd_dtw$Z_05 - wtd_dtw$WTD
wtd_dtw$water_table_DEM003 <- wtd_dtw$Z_UAV - wtd_dtw$WTD
#Filtering a given date
wtd_select <- wtd_dtw %>% filter(Date %in% as.Date(c("2021-07-26", "2021-07-27")))
wtd_select$water_table <- wtd_select$Elev - wtd_select$WTD
wtd_select$water_table_DEM05 <- wtd_select$Z_05 - wtd_select$WTD
wtd_select$water_table_DEM003 <- wtd_select$Z_UAV - wtd_select$WTD
ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
#Water table above sea level Z from GPS
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
#Water table above sea level Z from 50 cm DEM
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
#Water table above sea level Z from 3 cm DEM from UAV. !!! Important to remember the altitudes are not exact, to compare between sites.
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
################NOW trying to plot all points
#Direct measures of Water table depth
ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halmyran"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
#Water table above sea level Z from 3 cm DEM from UAV. !!! Important to remember the altitudes are not exact, to compare between sites.
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
library(readxl)
library(dplyr)
library(ggplot2)
library(plotly)
library(sf)
sto_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Stortjärn") %>%
mutate(Site = "Stortjarn")
halm_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Hålmyran") %>%
mutate(Site = "Halmyran")
hals_wtd <- read_excel("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Manual_WTD/Manual water table measurements.xlsx",sheet="Hälsingfors") %>%
mutate(Site = "Halsingfors")
degfert_wtd <- Reduce(rbind, list(sto_wtd, halm_wtd, hals_wtd))
degfert_wtd$WTD <- degfert_wtd$WTD/100
degfert_wtd$Date <- as.Date(degfert_wtd$Date)
degfert_wtd$wat <- paste0('W',degfert_wtd$`Tube number`)
ggplot(degfert_wtd %>% filter(Site=="Stortjarn"), aes(Date, WTD, group=Site, color=Site))+
geom_point()+
theme_bw()
##Importing extracted DTW
dtw <- sf::read_sf("C:/BRAVE/slu/MyPhD/WTD_modelling_simple/Data/Shapefiles/Extracted/Degfert_DTW_05.shp")
wtd_dtw <- merge(degfert_wtd, dtw, by=c("wat", "Site"))
#######################################
#calculations on all the dataset
wtd_dtw$water_table <- wtd_dtw$Elev - wtd_dtw$WTD
wtd_dtw$water_table_DEM05 <- wtd_dtw$Z_05 - wtd_dtw$WTD
wtd_dtw$water_table_DEM003 <- wtd_dtw$Z_UAV - wtd_dtw$WTD
#Filtering a given date
wtd_select <- wtd_dtw %>% filter(Date %in% as.Date(c("2021-07-26", "2021-07-27")))
wtd_select$water_table <- wtd_select$Elev - wtd_select$WTD
wtd_select$water_table_DEM05 <- wtd_select$Z_05 - wtd_select$WTD
wtd_select$water_table_DEM003 <- wtd_select$Z_UAV - wtd_select$WTD
ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
#Water table above sea level Z from GPS
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table, label = wat))+
geom_point()+
theme_bw())
#Water table above sea level Z from 50 cm DEM
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM05, label = wat))+
geom_point()+
theme_bw())
#Water table above sea level Z from 3 cm DEM from UAV. !!! Important to remember the altitudes are not exact, to compare between sites.
ggplotly(ggplot(wtd_select %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_select %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
################NOW trying to plot all points
#Direct measures of Water table depth
ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
ggplot(wtd_dtw %>% filter(Site=="Halmyran"), aes(DTW_05, WTD))+
geom_point()+
theme_bw()
#Water table above sea level Z from 3 cm DEM from UAV. !!! Important to remember the altitudes are not exact, to compare between sites.
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Stortjarn"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Halsingfors"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
ggplotly(ggplot(wtd_dtw %>% filter(Site=="Halmyran"), aes(DTW_05, water_table_DEM003, label = wat))+
geom_point()+
theme_bw())
