merge(rd_err_co2_final[,c("datetime","meas_err")], all=TRUE)
output_list <- list()
#30 min...
df_30min <- df_mc %>%
dplyr::mutate(NEE_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE_f),
GPP_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(GPP_f),
Reco=PostEddyPro::umolCO2m2s_to_gCm2_30min(Reco)) %>%
dplyr::group_by(datetime) %>%
dplyr::summarise(NEE_sd = stats::sd(NEE_f),
GPP_sd = stats::sd(GPP_f),
Reco_sd = stats::sd(Reco)) %>%
merge(rd_err_co2_final[,c("datetime","meas_err")], all=TRUE)
rd_err_co2_final_day <- rd_err_co2_final %>%
dplyr::mutate(date=as.Date(datetime)) %>%
dplyr::group_by(date) %>%
dplyr::summarise(meas_err=sqrt(sum((meas_err^2))))
df_day <- df_mc %>%
dplyr::mutate(NEE_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE_f),
GPP_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(GPP_f),
Reco=PostEddyPro::umolCO2m2s_to_gCm2_30min(Reco),
date=as.Date(datetime)) %>%
dplyr::group_by(date,iteration) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco)) %>%
dplyr::group_by(date) %>%
dplyr::summarise(NEE_stats::sd = stats::sd(NEE_sum),
GPP_stats::sd = stats::sd(GPP_sum),
Reco_stats::sd = stats::sd(Reco_sum)) %>%
merge(rd_err_co2_final_day[,c("date","meas_err")], all=TRUE)
df_day <- df_mc %>%
dplyr::mutate(NEE_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE_f),
GPP_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(GPP_f),
Reco=PostEddyPro::umolCO2m2s_to_gCm2_30min(Reco),
date=as.Date(datetime)) %>%
dplyr::group_by(date,iteration) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco)) %>%
dplyr::group_by(date) %>%
dplyr::summarise(NEE_sd = stats::sd(NEE_sum),
GPP_sd = stats::sd(GPP_sum),
Reco_sd = stats::sd(Reco_sum)) %>%
merge(rd_err_co2_final_day[,c("date","meas_err")], all=TRUE)
rd_err_co2_final_week <- rd_err_co2_final %>%
dplyr::mutate(year=lubridate::year(datetime),
week=lubridate::week(datetime)) %>%
dplyr::group_by(year,week) %>%
dplyr::summarise(meas_err=sqrt(sum((meas_err^2))))
df_week <- df_mc %>%
dplyr::mutate(NEE_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE_f),
GPP_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(GPP_f),
Reco=PostEddyPro::umolCO2m2s_to_gCm2_30min(Reco),
year = lubridate::year(datetime),
week = lubridate::week(datetime)) %>%
dplyr::group_by(year,week,iteration) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco)) %>%
dplyr::group_by(year,week) %>%
dplyr::summarise(NEE_sd = stats::sd(NEE_sum),
GPP_sd = stats::sd(GPP_sum),
Reco_sd = stats::sd(Reco_sum)) %>%
merge(rd_err_co2_final_week[,c("year","week","meas_err")], all=TRUE)
rd_err_co2_final_month <- rd_err_co2_final %>%
dplyr::mutate(year=lubridate::year(datetime),
month=lubridate::month(datetime)) %>%
dplyr::group_by(year,month) %>%
dplyr::summarise(meas_err=sqrt(sum((meas_err^2))))
df_month <- df_mc %>%
dplyr::mutate(NEE_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE_f),
GPP_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(GPP_f),
Reco=PostEddyPro::umolCO2m2s_to_gCm2_30min(Reco),
year = lubridate::year(datetime),
month = lubridate::month(datetime)) %>%
dplyr::group_by(year,month,iteration) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco)) %>%
dplyr::group_by(year,month) %>%
dplyr::summarise(NEE_sd = stats::sd(NEE_sum),
GPP_sd = stats::sd(GPP_sum),
Reco_sd = stats::sd(Reco_sum)) %>%
merge(rd_err_co2_final_month[,c("year","month","meas_err")], all=TRUE)
rd_err_co2_final_year <- rd_err_co2_final %>%
dplyr::mutate(year=lubridate::year(datetime)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(meas_err=sqrt(sum((meas_err^2))))
df_year <- df_mc %>%
dplyr::mutate(NEE_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE_f),
GPP_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(GPP_f),
Reco=PostEddyPro::umolCO2m2s_to_gCm2_30min(Reco),
year = lubridate::year(datetime)) %>%
dplyr::group_by(year,iteration) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(NEE_sd = stats::sd(NEE_sum),
GPP_sd = stats::sd(GPP_sum),
Reco_sd = stats::sd(Reco_sum)) %>%
merge(rd_err_co2_final_year[,c("year","meas_err")], all=TRUE)
#reading the gapfilled file
headers <- colnames(data.table::fread(path_to_df_f))
#units <- scan(path_to_file, what = character(), skip=1, nlines = 1, sep="\t")
flux_df_f <- data.table::fread(path_to_df_f, skip = 2, header = F)
names(flux_df_f) <- headers
flux_df_f <- as.data.frame(flux_df_f)
flux_df_f[flux_df_f== -9999] <- NA
flux_df_f$date <- as.Date(flux_df_f$DoY, origin = paste0(flux_df_f$Year-1,"-12-31"))
flux_df_f$time <- hms::hms(hours=flux_df_f$Hour)
flux_df_f[,datetime] <- as.POSIXct(paste(flux_df_f$date,flux_df_f$time), format="%Y-%m-%d %H:%M:%S",tz="UTC")
flux_df_f[,"datetime"] <- as.POSIXct(paste(flux_df_f$date,flux_df_f$time), format="%Y-%m-%d %H:%M:%S",tz="UTC")
flux_df_f <- flux_df_f %>%
dplyr::mutate(NEE=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE),
NEE_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE_f),
GPP_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(GPP_f),
Reco=PostEddyPro::umolCO2m2s_to_gCm2_30min(Reco))
View(flux_df_f)
#reading the gapfilled file
headers <- colnames(data.table::fread(path_to_df_f))
#units <- scan(path_to_file, what = character(), skip=1, nlines = 1, sep="\t")
flux_df_f <- data.table::fread(path_to_df_f, skip = 2, header = F)
names(flux_df_f) <- headers
flux_df_f <- as.data.frame(flux_df_f)
flux_df_f[flux_df_f== -9999] <- NA
flux_df_f$date <- as.Date(flux_df_f$DoY, origin = paste0(flux_df_f$Year-1,"-12-31"))
flux_df_f$time <- hms::hms(hours=flux_df_f$Hour)
flux_df_f[,"datetime"] <- as.POSIXct(paste(flux_df_f$date,flux_df_f$time), format="%Y-%m-%d %H:%M:%S",tz="UTC")
flux_df_f <- flux_df_f %>%
dplyr::mutate(NEE=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE),
NEE_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE_f),
GPP_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(GPP_f),
Reco=PostEddyPro::umolCO2m2s_to_gCm2_30min(Reco))
flux_df_f_30min <- flux_df_f %>%
dplyr::select(c("datetime","NEE","NEE_f","GPP_f","Reco"))%>%
merge(df_30min, by="datetime", all=TRUE)%>%
dplyr::rename(gapf_err=NEE_sd) %>%
dplyr::mutate(quality = ifelse(!is.na(NEE),
"original",
ifelse(!is.na(NEE_f),
"gapfilled",
NA)
)) %>%
dplyr::mutate(tot_err = ifelse(quality=="original",
meas_err,
ifelse(quality=="gapfilled",
sqrt(meas_err^2+gapf_err^2),
NA)
)) %>%
dplyr::select(c(datetime, NEE, NEE_f,quality,meas_err,gapf_err,tot_err,GPP_f,GPP_sd,Reco,Reco_sd))
#hour...
flux_df_f_hour <- flux_df_f %>%
dplyr::mutate(hour=as.POSIXct(round(datetime, units="hours"), tz="UTC")) %>%
dplyr::group_by(date) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco))%>%
merge(df_hour, by="hour", all=TRUE) %>%
dplyr::mutate(tot_err = sqrt(meas_err^2+NEE_sd^2))
df_hour <- df_mc %>%
dplyr::mutate(NEE_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE_f),
GPP_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(GPP_f),
Reco=PostEddyPro::umolCO2m2s_to_gCm2_30min(Reco),
hour=as.POSIXct(round(datetime, units="hours"), tz="UTC")) %>%
dplyr::group_by(hour,iteration) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco)) %>%
dplyr::group_by(hour) %>%
dplyr::summarise(NEE_sd = stats::sd(NEE_sum),
GPP_sd = stats::sd(GPP_sum),
Reco_sd = stats::sd(Reco_sum)) %>%
merge(rd_err_co2_final_hour[,c("hour","meas_err")], all=TRUE)
rd_err_co2_final_hour <- rd_err_co2_final %>%
dplyr::mutate(hour=as.POSIXct(round(datetime, units="hours"), tz="UTC")) %>%
dplyr::group_by(hour) %>%
dplyr::summarise(meas_err=sqrt(sum((meas_err^2))))
df_hour <- df_mc %>%
dplyr::mutate(NEE_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE_f),
GPP_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(GPP_f),
Reco=PostEddyPro::umolCO2m2s_to_gCm2_30min(Reco),
hour=as.POSIXct(round(datetime, units="hours"), tz="UTC")) %>%
dplyr::group_by(hour,iteration) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco)) %>%
dplyr::group_by(hour) %>%
dplyr::summarise(NEE_sd = stats::sd(NEE_sum),
GPP_sd = stats::sd(GPP_sum),
Reco_sd = stats::sd(Reco_sum)) %>%
merge(rd_err_co2_final_hour[,c("hour","meas_err")], all=TRUE)
#hour...
flux_df_f_hour <- flux_df_f %>%
dplyr::mutate(hour=as.POSIXct(round(datetime, units="hours"), tz="UTC")) %>%
dplyr::group_by(date) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco))%>%
merge(df_hour, by="hour", all=TRUE) %>%
dplyr::mutate(tot_err = sqrt(meas_err^2+NEE_sd^2))
#hour...
flux_df_f_hour <- flux_df_f %>%
dplyr::mutate(hour=as.POSIXct(round(datetime, units="hours"), tz="UTC")) %>%
dplyr::group_by(hour) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco))%>%
merge(df_hour, by="hour", all=TRUE) %>%
dplyr::mutate(tot_err = sqrt(meas_err^2+NEE_sd^2))
#day...
flux_df_f_day <- flux_df_f %>%
dplyr::mutate(date=as.Date(datetime)) %>%
dplyr::group_by(date) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco))%>%
merge(df_day, by="date", all=TRUE) %>%
dplyr::mutate(tot_err = sqrt(meas_err^2+NEE_sd^2))
plot(GPP_sum~date, data=flux_df_f_day, type="l")
lines(flux_df_f_day$date,flux_df_f_day$GPP_sum-df_day$GPP_sd, col="red")
lines(flux_df_f_day$date,flux_df_f_day$GPP_sum+df_day$GPP_sd, col="red")
View(flux_df_f_day)
View(flux_df_f_hour)
#month...
flux_df_f_month <- flux_df_f %>%
dplyr::mutate(year = lubridate::year(datetime),
month = lubridate::month(datetime)) %>%
dplyr::group_by(year,month) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco))%>%
merge(df_month, by=c("year","month"), all=TRUE) %>%
dplyr::mutate(tot_err = sqrt(meas_err^2+NEE_sd^2)) %>%
arrange(year,month)
View(flux_df_f_month)
#week..
flux_df_f_week <- flux_df_f %>%
dplyr::mutate(year = lubridate::year(datetime),
week = lubridate::week(datetime)) %>%
dplyr::group_by(year,week) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco))%>%
merge(df_week, by=c("year","week"), all=TRUE) %>%
dplyr::mutate(tot_err = sqrt(meas_err^2+NEE_sd^2)) %>%
arrange(year,week)
#month...
flux_df_f_month <- flux_df_f %>%
dplyr::mutate(year = lubridate::year(datetime),
month = lubridate::month(datetime)) %>%
dplyr::group_by(year,month) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco))%>%
merge(df_month, by=c("year","month"), all=TRUE) %>%
dplyr::mutate(tot_err = sqrt(meas_err^2+NEE_sd^2)) %>%
arrange(year,month)
flux_df_f_month$yearmon <- zoo::as.yearmon(paste(flux_df_f_month$year,flux_df_f_month$month,sep="-"))
flux_df_f_month <- flux_df_f_month %>%
arrange(yearmon)
df_month$yearmon <- zoo::as.yearmon(paste(df_month$year,df_month$month,sep="-"))
df_month <- df_month%>%
arrange(yearmon)
plot(NEE_sum~yearmon, data=flux_df_f_month, type="l")
lines(flux_df_f_month$yearmon,flux_df_f_month$NEE_sum-df_month$NEE_sd, col="red")
lines(flux_df_f_month$yearmon,flux_df_f_month$NEE_sum+df_month$NEE_sd, col="red")
#year...
flux_df_f_year <- flux_df_f %>%
dplyr::mutate(year = lubridate::year(datetime)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco))%>%
merge(df_year, by=c("year"), all=TRUE) %>%
dplyr::mutate(tot_err = sqrt(meas_err^2+NEE_sd^2))
View(rd_err_co2_final_hour)
View(df_30min)
#30 min...
df_30min <- df_mc %>%
dplyr::mutate(NEE_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE_f),
GPP_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(GPP_f),
Reco=PostEddyPro::umolCO2m2s_to_gCm2_30min(Reco)) %>%
dplyr::group_by(datetime) %>%
dplyr::summarise(NEE_sd = stats::sd(NEE_f),
GPP_sd = stats::sd(GPP_f),
Reco_sd = stats::sd(Reco)) %>%
merge(rd_err_co2_final[,c("datetime","meas_err")], all=TRUE)
rd_err_co2_final_hour <- rd_err_co2_final %>%
dplyr::mutate(hour=as.POSIXct(round(datetime, units="hours"), tz="UTC")) %>%
dplyr::group_by(hour) %>%
dplyr::summarise(meas_err=sqrt(sum((meas_err^2))))
df_hour <- df_mc %>%
dplyr::mutate(NEE_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE_f),
GPP_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(GPP_f),
Reco=PostEddyPro::umolCO2m2s_to_gCm2_30min(Reco),
hour=as.POSIXct(round(datetime, units="hours"), tz="UTC")) %>%
dplyr::group_by(hour,iteration) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco)) %>%
dplyr::group_by(hour) %>%
dplyr::summarise(NEE_sd = stats::sd(NEE_sum),
GPP_sd = stats::sd(GPP_sum),
Reco_sd = stats::sd(Reco_sum)) %>%
merge(rd_err_co2_final_hour[,c("hour","meas_err")], all=TRUE)
View(df_hour)
df_hour <- df_mc %>%
dplyr::mutate(NEE_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(NEE_f),
GPP_f=PostEddyPro::umolCO2m2s_to_gCm2_30min(GPP_f),
Reco=PostEddyPro::umolCO2m2s_to_gCm2_30min(Reco),
hour=as.POSIXct(round(datetime, units="hours"), tz="UTC")) %>%
dplyr::group_by(hour,iteration) %>%
dplyr::summarise(NEE_sum = sum(NEE_f),
GPP_sum = sum(GPP_f),
Reco_sum = sum(Reco))
View(df_hour)
View(df_30min)
View(rd_err_co2_final)
View(df_mc)
max(df_mc$iteration)
load_all()
#merging gapfilled montecarlo simulations
df_mc <- merge_montecarlo_sims(gf_type = "REddyProc",
dir = "D:/EC/Data_organized/Halmyran/FINAL/CO2/Montecarlo_gf",
saving_dir = "D:/EC/Data_organized/Halmyran/FINAL/CO2/Montecarlo_gf_merged",
datetime1="datetime",
filled_flux_col1=c("NEE_f","GPP_f","Reco"))
halm_aggr_fluxes <- co2_flux_aggregator(path_to_df_f = "D:/EC/Data_organized/Halmyran/FINAL/CO2/For_ReddyProc_NEE_GF.txt",
df_mc = df_mc,
rd_err_df = halm_err_df_imp)
saveRDS(halm_aggr_fluxes, "D:/EC/Data_organized/Halmyran/FINAL/CO2/aggr_rds_CO2.RDS")
View(halm_aggr_fluxes$flux_df_year)
View(halm_aggr_fluxes$flux_df_month)
View(halm_aggr_fluxes$flux_df_30min)
umolCO2m2s_to_gCm2_30min(1)
load_all()
halm_aggr_fluxes <- co2_flux_aggregator(path_to_df_f = "D:/EC/Data_organized/Halmyran/FINAL/CO2/For_ReddyProc_NEE_GF.txt",
df_mc = df_mc,
rd_err_df = halm_err_df_imp)
View(halm_err_df_imp)
halm_aggr_fluxes <- co2_flux_aggregator(path_to_df_f = "D:/EC/Data_organized/Halmyran/FINAL/CO2/For_ReddyProc_NEE_GF.txt",
df_mc = df_mc,
rd_err_df = halm_err_df_imp)
load_all()
halm_aggr_fluxes <- co2_flux_aggregator(path_to_df_f = "D:/EC/Data_organized/Halmyran/FINAL/CO2/For_ReddyProc_NEE_GF.txt",
df_mc = df_mc,
rd_err_df = halm_err_df_imp)
View(halm_aggr_fluxes$flux_df_year)
View(halm_aggr_fluxes$flux_df_month)
load_all()
halm_aggr_fluxes <- co2_flux_aggregator(path_to_df_f = "D:/EC/Data_organized/Halmyran/FINAL/CO2/For_ReddyProc_NEE_GF.txt",
df_mc = df_mc,
rd_err_df = halm_err_df_imp)
load_all()
halm_aggr_fluxes <- co2_flux_aggregator(path_to_df_f = "D:/EC/Data_organized/Halmyran/FINAL/CO2/For_ReddyProc_NEE_GF.txt",
df_mc = df_mc,
rd_err_df = halm_err_df_imp)
saveRDS(halm_aggr_fluxes, "D:/EC/Data_organized/Halmyran/FINAL/CO2/aggr_rds_CO2.RDS")
View(halm_aggr_fluxes$flux_df_growing_season)
load_all()
halm_aggr_fluxes <- co2_flux_aggregator(path_to_df_f = "D:/EC/Data_organized/Halmyran/FINAL/CO2/For_ReddyProc_NEE_GF.txt",
df_mc = df_mc,
rd_err_df = halm_err_df_imp)
View(halm_aggr_fluxes$flux_df_growing_season)
use_r("H2O_flux_aggregator")
saveRDS(halm_aggr_fluxes, "D:/EC/Data_organized/Halmyran/FINAL/CO2/aggr_rds_CO2.RDS")
#First visualization
vis_list_halm <- visualization(path_EC = "D:/EC/Data_organized/Halmyran/Eddypro/Output_final/eddypro_Halmyran_2022_07_07_full_output_2022-07-08T120131_adv.csv",
path_biomet = "D:/EC/Data_organized/Halmyran/Biomet_gf/halm_met.csv")
fluxes_meteo_halm <- vis_list_halm$data
vis_list_halm$graphs
plot(h2o_flux~datetime, data=fluxes_meteo_halm[which(fluxes_meteo_halm$co2_flux < 50 & fluxes_meteo_halm$h2o_flux > -20),])
#Quality control
fluxes_meteo_halm_qc <- quality_control(fluxes_meteo_halm,
gas="h2o",
limit_lower = -10,
limit_upper = 20,
Temp_col = "Ts_f")
# Additional hard flag visual...
#fluxes_meteo_halm_qc$co2_flux_final[which(fluxes_meteo_halm_qc$co2_flux_final < -15 | fluxes_meteo_halm_qc$co2_flux_final > 10)] <- NA
plot(h2o_flux_final~datetime, data=fluxes_meteo_halm_qc)
# fluxes_meteo_halm_qc
#Preparation for Reddyproc
fluxes_meteo_halm_qc$SWin_f[which(fluxes_meteo_halm_qc$SWin_f < 0)] <- 0
formatting_fluxes_REddyProc(df=fluxes_meteo_halm_qc,
flux_col = "h2o_flux_final",
FLUX="H2O",
saving_path = "D:/EC/Data_organized/Halmyran/FINAL/H2O")
#merging gapfilled montecarlo simulations
df_mc <- merge_montecarlo_sims(gf_type = "REddyProc",
dir = "D:/EC/Data_organized/Halmyran/FINAL/H2O/Montecarlo_gf",
saving_dir = "D:/EC/Data_organized/Halmyran/FINAL/H2O/Montecarlo_gf_merged",
datetime1="datetime",
filled_flux_col1=c("H2O_f"))
load_all()
preds <- c("Ta_f","Ts_f","WTD_f","Pa_f","PARin_f","PARout_f","RH_f","VPD_f","P_f")
halm_err_df <- fluxes_meteo_halm_qc[,c("datetime","rand_err_h2o_flux","h2o_flux_final", preds)]
plot(rand_err_h2o_flux~datetime, data=halm_err_df)
halm_err_df$rand_err_h2o_flux[which(is.na(halm_err_df$h2o_flux_final))] <- NA
halm_err_df$h2o_flux_final <- NULL
plot(rand_err_h2o_flux~datetime, data=halm_err_df)
halm_err_df$rand_err_h2o_flux[which(halm_err_df$rand_err_h2o_flux > 0.8)] <- NA
plot(rand_err_h2o_flux~datetime, data=halm_err_df)
preProcValues <- preProcess(halm_err_df, method = c("bagImpute"))
halm_err_df_imp <- predict(preProcValues, halm_err_df)
plot(rand_err_h2o_flux~datetime, data=halm_err_df_imp)
halm_aggr_fluxes <- h2o_flux_aggregator(path_to_df_f = "D:/EC/Data_organized/Halmyran/FINAL/H2O/For_ReddyProc_H2O_GF.txt",
df_mc = df_mc,
rd_err_df = halm_err_df_imp)
halm_aggr_fluxes$flux_df_year
halm_aggr_fluxes$flux_df_growing_season
load_all()
halm_aggr_fluxes <- h2o_flux_aggregator(path_to_df_f = "D:/EC/Data_organized/Halmyran/FINAL/H2O/For_ReddyProc_H2O_GF.txt",
df_mc = df_mc,
rd_err_df = halm_err_df_imp)
load_all()
halm_aggr_fluxes <- h2o_flux_aggregator(path_to_df_f = "D:/EC/Data_organized/Halmyran/FINAL/H2O/For_ReddyProc_H2O_GF.txt",
df_mc = df_mc,
rd_err_df = halm_err_df_imp)
halm_aggr_fluxes$flux_df_growing_season
load_all()
halm_aggr_fluxes <- h2o_flux_aggregator(path_to_df_f = "D:/EC/Data_organized/Halmyran/FINAL/H2O/For_ReddyProc_H2O_GF.txt",
df_mc = df_mc,
rd_err_df = halm_err_df_imp)
saveRDS(halm_aggr_fluxes, "D:/EC/Data_organized/Halmyran/FINAL/H2O/aggr_rds_H2O.RDS")
load_all()
halm_aggr_fluxes <- h2o_flux_aggregator(path_to_df_f = "D:/EC/Data_organized/Halmyran/FINAL/H2O/For_ReddyProc_H2O_GF.txt",
df_mc = df_mc,
rd_err_df = halm_err_df_imp)
saveRDS(halm_aggr_fluxes, "D:/EC/Data_organized/Halmyran/FINAL/H2O/aggr_rds_H2O.RDS")
halm_aggr_fluxes$flux_df_growing_season
halm_aggr_fluxes$flux_df_year
halm_aggr_fluxes$flux_df_hour
halm_aggr_fluxes$flux_df_month
load_all()
document()
gapfilling_list_halm <- readRDS("D:/EC/Data_organized/Halmyran/FINAL/gf_rds.RDS")
df_mc <- fread("D:/EC/Data_organized/Halmyran/FINAL/Montecarlo_gf_merged/monte_carlo_all.csv")
preds <- c("Ta_f","Ts_f","WTD_f","Pa_f","PARin_f","PARout_f","RH_f","VPD_f","P_f","yearly_sin","yearly_cos","delta")
halm_err_df <- gapfilling_list_halm$site_df[,c("datetime","rand_err_ch4_flux","ch4_flux_final_filled", "quality", preds)]
halm_err_df$rand_err_ch4_flux[which(halm_err_df$quality == "gapfilled")] <- NA
halm_err_df$quality <- NULL
preProcValues <- preProcess(halm_err_df, method = c("bagImpute"))
halm_err_df_imp <- predict(preProcValues, halm_err_df)
plot(rand_err_ch4_flux~datetime, data=halm_err_df_imp)
halm_aggr_fluxes <- ch4_flux_aggregator(flux_df = gapfilling_list_halm$site_df,
df_mc = df_mc,
rd_err_df = halm_err_df_imp)
saveRDS(halm_aggr_fluxes, "D:/EC/Data_organized/Halmyran/FINAL/aggr_rds.RDS")
View(halm_aggr_fluxes$flux_df_growing_season)
View(halm_aggr_fluxes$flux_df_year)
View(halm_aggr_fluxes$flux_df_growing_season)
View(halm_aggr_fluxes$flux_df_year)
halm_aggr_fluxes$flux_df_year
#First visualization
vis_list_deg <- visualization(path_EC = "D:/EC/Data_organized/Degero/Eddypro/Output/eddypro_Deg_LGR_2022_07_07_full_output_2022-07-09T213920_adv.csv",
path_biomet = "D:/EC/Data_organized/Degero/Biomet_gf/deg_met.csv")
fluxes_meteo_deg <- vis_list_deg$data
vis_list_deg$graphs
plot(co2_flux~datetime, data=fluxes_meteo_deg[which(fluxes_meteo_deg$co2_flux < 500),])
#Quality control
fluxes_meteo_deg_qc <- quality_control(fluxes_meteo_deg,
gas="co2",
limit_lower = -50,
limit_upper = 50,
Temp_col = "Ta_f")
library(devtools)
load_all()
library(ggplot2)
library(plotly)
library(caret)
library(RANN)
library(data.table)
vis_list_deg <- visualization(path_EC = "D:/EC/Data_organized/Degero/Eddypro/Output/eddypro_Deg_LGR_2022_07_07_full_output_2022-07-09T213920_adv.csv",
path_biomet = "D:/EC/Data_organized/Degero/Biomet_gf/deg_met.csv")
fluxes_meteo_deg <- vis_list_deg$data
vis_list_deg$graphs
plot(co2_flux~datetime, data=fluxes_meteo_deg[which(fluxes_meteo_deg$co2_flux < 500),])
#Quality control
fluxes_meteo_deg_qc <- quality_control(fluxes_meteo_deg,
gas="co2",
limit_lower = -50,
limit_upper = 50,
Temp_col = "Ta_f")
load_all()
vis_list_deg <- visualization(path_EC = "D:/EC/Data_organized/Degero/Eddypro/Output/eddypro_Deg_LGR_2022_07_07_full_output_2022-07-09T213920_adv.csv",
path_biomet = "D:/EC/Data_organized/Degero/Biomet_gf/deg_met.csv")
fluxes_meteo_deg <- vis_list_deg$data
vis_list_deg$graphs
plot(co2_flux~datetime, data=fluxes_meteo_deg[which(fluxes_meteo_deg$co2_flux < 500),])
#Quality control
fluxes_meteo_deg_qc <- quality_control(fluxes_meteo_deg,
gas="co2",
limit_lower = -50,
limit_upper = 50,
Temp_col = "Ta_f")
# Additional hard flag visual...
fluxes_meteo_deg_qc$co2_flux_final[which(fluxes_meteo_deg_qc$co2_flux_final < -15 | fluxes_meteo_deg_qc$co2_flux_final > 10)] <- NA
plot(co2_flux_final~datetime, data=fluxes_meteo_deg_qc)
# Additional hard flag visual...
fluxes_meteo_deg_qc$co2_flux_final[which(fluxes_meteo_deg_qc$co2_flux_final < -10 | fluxes_meteo_deg_qc$co2_flux_final > 10)] <- NA
plot(co2_flux_final~datetime, data=fluxes_meteo_deg_qc)
#Preparation for Reddyproc
fluxes_meteo_deg_qc$SWin_f[which(fluxes_meteo_deg_qc$SWin_f < 0)] <- 0
formatting_fluxes_REddyProc(df=fluxes_meteo_deg_qc,
flux_col = "co2_flux_final",
FLUX="NEE",
saving_path = "D:/EC/Data_organized/Degero/FINAL/CO2")
reddyproc_gapfiller(formatted_file_path="D:/EC/Data_organized/Degero/FINAL/CO2/For_ReddyProc_NEE.txt",
saving_folder="D:/EC/Data_organized/Degero/FINAL/CO2",
FLUX="NEE")
